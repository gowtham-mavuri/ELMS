[{"D:\\ELMS\\client\\src\\index.js":"1","D:\\ELMS\\client\\src\\App.js":"2","D:\\ELMS\\client\\src\\components\\PrivateRoute.js":"3","D:\\ELMS\\client\\src\\components\\dashboards\\AdminDashboard.js":"4","D:\\ELMS\\client\\src\\components\\dashboards\\SubadminDashboard.js":"5","D:\\ELMS\\client\\src\\components\\dashboards\\EmployeeDashboard.js":"6","D:\\ELMS\\client\\src\\components\\Login.js":"7","D:\\ELMS\\client\\src\\components\\UpdateHolidays.js":"8","D:\\ELMS\\client\\src\\components\\EmployeeRequests.js":"9","D:\\ELMS\\client\\src\\components\\RequestsBranch.js":"10","D:\\ELMS\\client\\src\\components\\EmployeesBranch.js":"11","D:\\ELMS\\client\\src\\components\\OldRequestsBranch.js":"12","D:\\ELMS\\client\\src\\components\\DepartmentsBranch.js":"13","D:\\ELMS\\client\\src\\components\\EmployeeUpdate.js":"14","D:\\ELMS\\client\\src\\components\\EmployeeProfile.js":"15","D:\\ELMS\\client\\src\\components\\EmployeeCreate.js":"16","D:\\ELMS\\client\\src\\components\\RequestHistory.js":"17","D:\\ELMS\\client\\src\\components\\ApplyLeave.js":"18","D:\\ELMS\\client\\src\\components\\Department.js":"19","D:\\ELMS\\client\\src\\components\\Request.js":"20","D:\\ELMS\\client\\src\\components\\EmployeeRow.js":"21","D:\\ELMS\\client\\src\\components\\Calendar.js":"22","D:\\ELMS\\client\\src\\components\\EmployeeContainer.js":"23","D:\\ELMS\\client\\src\\components\\AddDept.js":"24","D:\\ELMS\\client\\src\\components\\AddBranch.js":"25","D:\\ELMS\\client\\src\\components\\Branches.js":"26","D:\\ELMS\\client\\src\\components\\AddDepartment.js":"27","D:\\ELMS\\client\\src\\components\\UpdateEmployee.js":"28","D:\\ELMS\\client\\src\\components\\AddEmployee.js":"29","D:\\ELMS\\client\\src\\components\\Departments.js":"30","D:\\ELMS\\client\\src\\components\\Employees.js":"31","D:\\ELMS\\client\\src\\components\\UpdateBranch.js":"32","D:\\ELMS\\client\\src\\components\\DepartmentContainer.js":"33","D:\\ELMS\\client\\src\\components\\BranchContainer.js":"34","D:\\ELMS\\client\\src\\components\\EmployeeContainer2.js":"35","D:\\ELMS\\client\\src\\components\\Branch.js":"36","D:\\ELMS\\client\\src\\components\\Employee.js":"37","D:\\ELMS\\client\\src\\components\\Requests.js":"38","D:\\ELMS\\client\\src\\components\\RequestContainer.js":"39","D:\\ELMS\\client\\src\\components\\Request2.js":"40","D:\\ELMS\\client\\src\\components\\OldRequests.js":"41","D:\\ELMS\\client\\src\\components\\ChartDoughnut.js":"42"},{"size":150,"mtime":1617701092564,"results":"43","hashOfConfig":"44"},{"size":1065,"mtime":1617701092325,"results":"45","hashOfConfig":"44"},{"size":457,"mtime":1617701092539,"results":"46","hashOfConfig":"44"},{"size":6233,"mtime":1618134695253,"results":"47","hashOfConfig":"44"},{"size":2772,"mtime":1618062531342,"results":"48","hashOfConfig":"44"},{"size":1861,"mtime":1618143344260,"results":"49","hashOfConfig":"44"},{"size":4092,"mtime":1617865407062,"results":"50","hashOfConfig":"44"},{"size":4778,"mtime":1617701092559,"results":"51","hashOfConfig":"44"},{"size":4278,"mtime":1618133669988,"results":"52","hashOfConfig":"44"},{"size":1006,"mtime":1617880045065,"results":"53","hashOfConfig":"44"},{"size":1392,"mtime":1617879473869,"results":"54","hashOfConfig":"44"},{"size":3768,"mtime":1618134298829,"results":"55","hashOfConfig":"44"},{"size":1406,"mtime":1617879143216,"results":"56","hashOfConfig":"44"},{"size":10599,"mtime":1618143344260,"results":"57","hashOfConfig":"44"},{"size":2433,"mtime":1617701092492,"results":"58","hashOfConfig":"44"},{"size":8311,"mtime":1617701092490,"results":"59","hashOfConfig":"44"},{"size":3161,"mtime":1618143344260,"results":"60","hashOfConfig":"44"},{"size":4760,"mtime":1618051922935,"results":"61","hashOfConfig":"44"},{"size":2613,"mtime":1617880504658,"results":"62","hashOfConfig":"44"},{"size":5964,"mtime":1618132214276,"results":"63","hashOfConfig":"44"},{"size":2038,"mtime":1617957539090,"results":"64","hashOfConfig":"44"},{"size":1252,"mtime":1617701092329,"results":"65","hashOfConfig":"44"},{"size":323,"mtime":1617959395956,"results":"66","hashOfConfig":"44"},{"size":2786,"mtime":1617879016479,"results":"67","hashOfConfig":"44"},{"size":3302,"mtime":1618064188172,"results":"68","hashOfConfig":"44"},{"size":2431,"mtime":1618139400251,"results":"69","hashOfConfig":"44"},{"size":3876,"mtime":1618064073861,"results":"70","hashOfConfig":"44"},{"size":11095,"mtime":1618064164271,"results":"71","hashOfConfig":"44"},{"size":8794,"mtime":1618064149381,"results":"72","hashOfConfig":"44"},{"size":2229,"mtime":1618064034617,"results":"73","hashOfConfig":"44"},{"size":2437,"mtime":1618064052607,"results":"74","hashOfConfig":"44"},{"size":3665,"mtime":1618064176981,"results":"75","hashOfConfig":"44"},{"size":309,"mtime":1618063957566,"results":"76","hashOfConfig":"44"},{"size":299,"mtime":1618063930996,"results":"77","hashOfConfig":"44"},{"size":296,"mtime":1618063933577,"results":"78","hashOfConfig":"44"},{"size":1254,"mtime":1618135479933,"results":"79","hashOfConfig":"44"},{"size":1715,"mtime":1618064092716,"results":"80","hashOfConfig":"44"},{"size":1851,"mtime":1618063954054,"results":"81","hashOfConfig":"44"},{"size":295,"mtime":1618063936089,"results":"82","hashOfConfig":"44"},{"size":4438,"mtime":1618132222272,"results":"83","hashOfConfig":"44"},{"size":4473,"mtime":1618134580747,"results":"84","hashOfConfig":"44"},{"size":713,"mtime":1618139526467,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1kqbsgt",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ELMS\\client\\src\\index.js",[],["185","186"],"D:\\ELMS\\client\\src\\App.js",[],"D:\\ELMS\\client\\src\\components\\PrivateRoute.js",[],"D:\\ELMS\\client\\src\\components\\dashboards\\AdminDashboard.js",["187"],"import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nimport Branches from '../Branches';\r\nimport UpdateBranch from '../UpdateBranch';\r\nimport UpdateHolidays from '../UpdateHolidays';\r\nimport AddDepartment from '../AddDepartment';\r\nimport Departments from '../Departments';\r\nimport AddEmployee from '../AddEmployee';\r\nimport UpdateEmployee from '../UpdateEmployee';\r\nimport AddBranch from '../AddBranch';\r\nimport OldRequests from '../OldRequests';\r\nimport '../sidebar.css'\r\nimport '../nav.css'\r\nimport logo from '../logopic.png'\r\nimport Employees from '../Employees';\r\nimport Requests from '../Requests';\r\nimport EmployeeRequests from '../EmployeeRequests';\r\n\r\n\r\n\r\nfunction AdminDashboard(props) {\r\n  let { path, url } = useRouteMatch();\r\n \r\n  // handle click event of logout button\r\n  const handleLogout = () => {   \r\n    localStorage.setItem('token','');   \r\n    props.history.push('/');\r\n  }\r\n \r\n  return (\r\n    <div>\r\n    <div id=\"header\">\r\n        <img id=\"#logo\" src={logo} alt=\"Logo\" />\r\n        <h3 id=\"name\">SHRI CHANDRA BULK CARGO SERVICES PVT.LTD</h3>\r\n    </div>\r\n    <div id=\"topbar\">\r\n        <ul >\r\n          <li >\r\n            <Link to={`${url}/branches`}>Branches</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/addBranch`}>Add Branch</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/addDept`}>Add Department</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/Depts`}>Departments List</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/addEmp`}>Add Employee</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/Emps`}>Employee List</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/Reqs`}>Request List</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/OldReqs`}>Old Request List</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/holidays`}>Add Holidays</Link>\r\n          </li>\r\n          <li>\r\n                <a onClick={handleLogout}>Logout</a>\r\n          </li>\r\n        </ul>\r\n    </div>\r\n    <div>\r\n      <Switch>\r\n              <Route exact path={path}>\r\n                <Branches />\r\n              </Route>\r\n              <Route path={`${path}/branches`}>\r\n                <Branches />\r\n              </Route>\r\n              <Route path={`${path}/addBranch`}>\r\n                <AddBranch />\r\n              </Route>\r\n              <Route path={`${path}/addDept`}>\r\n                <AddDepartment />\r\n              </Route>\r\n              <Route path={`${path}/Depts`}>\r\n                <Departments />\r\n              </Route>\r\n              <Route path={`${path}/Emps`}>\r\n                <Employees />\r\n              </Route>\r\n              <Route path={`${path}/addEmp`}>\r\n                <AddEmployee />\r\n              </Route>\r\n              <Route path={`${path}/Reqs`}>\r\n                <Requests />\r\n              </Route>\r\n              <Route path={`${path}/OldReqs`}>\r\n                <OldRequests />\r\n              </Route>\r\n              <Route path={`${path}/updateEmp/:id`} component={UpdateEmployee} />\r\n              <Route path={`${path}/emp/reqs/:emp_id`} component={EmployeeRequests} />\r\n              <Route path={`${path}/update/:id`} component={UpdateBranch} />\r\n              <Route path={`${path}/holidays`} component={UpdateHolidays} />\r\n      </Switch>\r\n    </div>\r\n    </div>\r\n    \r\n    \r\n    \r\n  );\r\n}\r\n \r\nexport default AdminDashboard;\r\n/*\r\n<div>\r\n    <div id=\"header\">\r\n        <img id=\"#logo\" src={logo} alt=\"Logo\" />\r\n        <h3 id=\"name\">SHRI CHANDRA BULK CARGO SERVICES PVT.LTD</h3>\r\n    </div>\r\n    <div id=\"topbar\">\r\n        <ul >\r\n          <li >\r\n            <Link to={`${url}/branches`}>Branches</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/add`}>Add Branch</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/holidays`}>Add Holidays</Link>\r\n          </li>\r\n          <li>\r\n                <a onClick={handleLogout}>Logout</a>\r\n          </li>\r\n        </ul>\r\n    </div>\r\n    <div>\r\n      <Switch>\r\n              <Route exact path={path}>\r\n                <Branches />\r\n              </Route>\r\n              <Route path={`${path}/branches`}>\r\n                <Branches />\r\n              </Route>\r\n              <Route path={`${path}/add`}>\r\n                <AddBranch />\r\n              </Route>\r\n              <Route path={`${path}/update/:id`} component={UpdateBranch} />\r\n              <Route path={`${path}/branch/:id`} component={BranchComponent} />\r\n              <Route path={`${path}/holidays`} component={UpdateHolidays} />\r\n      </Switch>\r\n    </div>\r\n    </div>\r\n    <!--<div class=\"header-left\">\r\n\t\t\t\t\t\t<img src={logo} alt=\"Logo\"></img>\r\n        </div>-->\r\n    \r\n\r\n        <ul class=\"nav user-menu\">\r\n         <li class=\"nav-item dropdown\">\r\n\t\t\t\t\t\t<a href=\"#\" class=\"dropdown-toggle nav-link\" data-toggle=\"dropdown\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-comment-o\"></i> <span class=\"badge badge-pill\">8</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<div class=\"dropdown-menu notifications\">\r\n\t\t\t\t\t\t\t<div class=\"topnav-dropdown-header\">\r\n\t\t\t\t\t\t\t\t<span class=\"notification-title\">Messages</span>\r\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" class=\"clear-noti\"> Clear All </a>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t<div class=\"noti-content\">\r\n\t\t\t\t\t\t\t\t<ul class=\"notification-list\">\r\n\t\t\t\t\t\t\t\t\t<li class=\"notification-message\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://smarthr.dreamguystech.com/blue/chat.html\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"list-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"list-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"avatar\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src=\"https://smarthr.dreamguystech.com/blue/assets/img/profiles/avatar-09.jpg\"></img>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"list-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"message-author\">Richard Miles </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"message-time\">12:28 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"message-content\">Lorem ipsum dolor sit amet, consectetur adipiscing</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n                </ul>\r\n              </div>\r\n              </div>\r\n            </li>\r\n        </ul>\r\n    */","D:\\ELMS\\client\\src\\components\\dashboards\\SubadminDashboard.js",["188"],"import React from 'react';\r\nimport {\r\n\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nimport DepartmentsBranch from '../DepartmentsBranch';\r\nimport EmployeesBranch from '../EmployeesBranch';\r\nimport RequestBranch from '../RequestsBranch';\r\nimport OldRequestBranch from '../OldRequestsBranch';\r\nimport EmployeeUpdate from '../EmployeeUpdate';\r\nimport EmployeeCreate from '../EmployeeCreate';\r\nimport EmployeeRequests from '../EmployeeRequests';\r\n\r\nimport '../sidebar.css'\r\nimport logo from '../logopic.png'\r\nimport AddDept from '../AddDept';\r\n\r\nfunction SubadminDashboard(props) {\r\n  let { path, url } = useRouteMatch();\r\n\r\n  // handle click event of logout button\r\n  const handleLogout = () => {   \r\n    localStorage.setItem('token','');   \r\n    props.history.push('/');\r\n  }\r\n \r\n\r\n  return (\r\n    <div>\r\n    <div id=\"header\">\r\n        <img id=\"logo\" src={logo} alt=\"Logo\" />\r\n        <h3 id=\"name\">SHRI CHANDRA BULK CARGO SERVICES PVT.LTD</h3>\r\n    </div>\r\n    <div id=\"total\">\r\n      <nav id=\"sidebar\">\r\n            <ul className=\"list-unstyled components\">\r\n              <li>\r\n                <Link to={`${url}/AddEmployee`}>Add Employee</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={`${url}/empList`}>Manage Employee</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={`${url}/AddDept`}>Add Department</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={`${url}/departments`}>Manage Departments</Link>\r\n              </li>            \r\n              <li>\r\n                <Link to={`${url}/requests`}>New Leave Requests</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={`${url}/oldrequests`}>Old  leave Requests</Link>\r\n              </li>\r\n              \r\n              \r\n              <li>\r\n                <a onClick={handleLogout}>Logout</a>\r\n              </li>\r\n            </ul>\r\n      </nav>\r\n      <Switch>\r\n              <Route exact path={path} component={DepartmentsBranch} />\r\n              <Route path={`${path}/departments`} component={DepartmentsBranch} />\r\n\r\n              <Route path={`${path}/empList`} component={EmployeesBranch} />\r\n \r\n              <Route path={`${path}/requests`} component={RequestBranch} />\r\n              <Route path={`${path}/oldrequests`} component={OldRequestBranch} />\r\n\r\n              <Route exact path={`${path}/emp/:emp_id`} component={EmployeeUpdate} />\r\n              <Route exact path={`${path}/emp/reqs/:emp_id`} component={EmployeeRequests} />\r\n              <Route path={`${path}/AddEmployee`} component={EmployeeCreate} />\r\n              <Route path={`${path}/AddDept`} component={AddDept} />\r\n      </Switch>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default SubadminDashboard;","D:\\ELMS\\client\\src\\components\\dashboards\\EmployeeDashboard.js",["189"],"import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport EmployeeProfile from '../EmployeeProfile';\r\nimport ApplyLeave from '../ApplyLeave';\r\nimport RequestHistory from '../RequestHistory';\r\nimport '../sidebar.css'\r\nimport logo from '../logopic.png'\r\nfunction EmployeeDashboard(props) {\r\n  let { path, url } = useRouteMatch();\r\n \r\n  // handle click event of logout button\r\n  const handleLogout = () => {   \r\n    localStorage.setItem('token','');   \r\n    props.history.push('/');\r\n  }\r\n \r\n  return (\r\n    <div>\r\n    <div id=\"header\">\r\n        <img id=\"logo\" src={logo} alt=\"Logo\" />\r\n        <button id=\"main\" class=\"openbtn\" onclick=\"openNav()\">&#9776;</button>\r\n        <h3 id=\"name\">Shri Chandra Bulk Cargo Services Pvt.Ltd</h3>\r\n    </div>\r\n    <div id=\"total\">\r\n      <nav id=\"sidebar\">\r\n     \r\n            <ul className=\"list-unstyled components\">\r\n            <li>\r\n              <Link to={`${url}/profile`}>Profile</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`${url}/leave`}>Apply Leave</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`${url}/requests`}>Leave History</Link>\r\n            </li>\r\n            <li>\r\n              <a onClick={handleLogout}>Logout</a>\r\n            </li>\r\n            </ul>\r\n      </nav>\r\n      <Switch>\r\n              <Route exact path={path}>\r\n                <EmployeeProfile />\r\n              </Route>\r\n              <Route path={`${path}/profile`}>\r\n                <EmployeeProfile />\r\n              </Route>\r\n              <Route path={`${path}/leave`}>\r\n                <ApplyLeave />\r\n              </Route>\r\n              <Route path={`${path}/requests`}>\r\n                <RequestHistory />\r\n              </Route>\r\n      </Switch>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default EmployeeDashboard;","D:\\ELMS\\client\\src\\components\\Login.js",["190","191"],"import React, { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\n\r\nimport '../styles/login.css'\r\n\r\nconst LoginSchema = yup.object().shape({\r\n  role:  yup.mixed().oneOf([\"admin\",\"subadmin\",\"employee\"],\"Choose a role\"),\r\n  branch : yup.string(),\r\n  username : yup.string(),\r\n  password :yup.string().required()\r\n});\r\n\r\nfunction Login(props) \r\n{\r\n  const { register, handleSubmit, errors } = useForm({resolver:yupResolver( LoginSchema )});\r\n  const [role,setRole] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [branches,setBranches] = useState([]);\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n      console.log(res.data.result)\r\n        setBranches(res.data.result);\r\n        setLoading(false);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n      // eslint-disable-next-line\r\n},[])\r\n\r\n  const onSubmit=(data)=>{\r\n    setLoading(true);\r\n    var { role,username,password,branch } = data;\r\n    axios.post('http://localhost:5000/login',{\r\n            role,\r\n            username,\r\n            branch,\r\n            password\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n            {\r\n                setError(\"wrong username password\");\r\n                setLoading(false);\r\n            }\r\n            else\r\n            {\r\n                localStorage.setItem('token',res.data.token);\r\n                if(role === 'admin')\r\n                  props.history.push('/AdminDashboard');\r\n                else if(role === 'subadmin')\r\n                  props.history.push('/SubadminDashboard');\r\n                else if( role === 'employee')\r\n                  props.history.push('/EmployeeDashboard');\r\n\r\n            }\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setError(\"wrong username&&password\");\r\n          setLoading(false);\r\n        })\r\n  }\r\n\r\n  return (\r\n    <div id=\"loginbody\">\r\n    <div className=\"wrapper1\">\r\n\t\t<div id=\"loginbox\"class=\"container-fluid \">\r\n\t\t\t<h4>Login</h4>\r\n\t\t\t\t<form className=\"loginform\" onSubmit={handleSubmit(onSubmit)}>\r\n          \r\n\t\t\t\t\t<div id=\"box\">\r\n\t\t\t\t\t\t<label>Role</label>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<select name=\"role\" onChange={e=>setRole(e.target.value)} ref={register} required>\r\n\t\t\t\t\t\t\t<option disabled hidden selected value=\"\">--select an option--</option>\r\n\t\t\t\t\t\t\t<option id=\"op1\" value=\"admin\">Admin@HR</option>\r\n\t\t\t\t\t\t\t<option id=\"op2\" value=\"subadmin\">Branch Manager</option>\r\n\t\t\t\t\t\t\t<option id=\"op3\" value=\"employee\">Employee</option>\r\n\t\t\t\t\t    </select>\r\n              {errors.role && <p>{errors.role.message}</p>}\r\n\t\t\t\t\t</div>\r\n        { role==\"subadmin\"&& \r\n          <div id=\"box\">\r\n\t\t\t\t\t\t<label>Select Branch</label>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<select  name=\"branch\" ref={register} >\r\n              <option hidden disabled selected value> -- select an option -- </option>\r\n              { branches.map((branch)=><option value={branch.branch_id} id={branch.branch_id}>{branch.name}</option>) }\r\n            </select>\r\n            {errors.branch && <p>{errors.branch.message}</p>}\r\n\t\t\t\t\t</div>\r\n        }\r\n        \r\n\t\t\t\t{ role==\"employee\" &&\t<div id=\"box\">\r\n              <label>Username</label>\r\n              <input type=\"text\" name=\"username\" placeholder=\"Enter Username\" ref={register} />\r\n              {errors.username && <p>{errors.username.message}</p>}\r\n\t\t\t\t  </div>\r\n        }\r\n\t\t      <div id=\"box\">\r\n              <label>Password</label>\r\n              <input type=\"password\" name=\"password\" placeholder=\"Enter password\"  ref={register}/>\r\n              {errors.password && <p>{errors.password.message}</p>}\r\n          </div>\r\n          {error&&<p>{error}</p>}\r\n\t\t\t\t\t<br></br>\r\n          <input id=\"loginbutton\" type=\"submit\" value={loading ? 'Loading...' : 'Login'} disabled={loading}/>\r\n\t\t\t\t</form>\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n    </div>\r\n  )\r\n\r\n  \r\n}\r\n\r\n \r\nexport default Login;","D:\\ELMS\\client\\src\\components\\UpdateHolidays.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeRequests.js",[],"D:\\ELMS\\client\\src\\components\\RequestsBranch.js",[],"D:\\ELMS\\client\\src\\components\\EmployeesBranch.js",[],"D:\\ELMS\\client\\src\\components\\OldRequestsBranch.js",[],"D:\\ELMS\\client\\src\\components\\DepartmentsBranch.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeUpdate.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeProfile.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeCreate.js",[],"D:\\ELMS\\client\\src\\components\\RequestHistory.js",[],"D:\\ELMS\\client\\src\\components\\ApplyLeave.js",["192"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Calendar from './Calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport 'react-date-range/dist/styles.css'; // main css file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { DateRange} from 'react-date-range';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\n\r\nimport '../styles/applyLeave.css'\r\n\r\nfunction ApplyLeave(props) {\r\n  const LeaveSchema = yup.object().shape({\r\n    desc: yup.string(),\r\n    type:yup.mixed().oneOf([\"sick\",\"casual\"],'Invalid').required()\r\n  });\r\n  const { register, handleSubmit, errors } = useForm({ resolver:yupResolver( LeaveSchema ) });\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: 'selection'\r\n    }\r\n  ]);\r\n  // eslint-disable-next-line\r\n  const [holidays,setHolidays] = useState([]);\r\n  const [submitted,setSubmitted] = useState(false);\r\n  const [loading,setLoading] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/holidaysGet',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            var data=res.data.result;\r\n            var dates=data.map(ele=>moment(ele.date).format('YYYY-MM-DD'))\r\n            setHolidays(dates);\r\n            \r\n        }).catch(err=>{\r\n          console.log(err);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  const diff=(startDate,endDate)=>{\r\n    endDate=moment(endDate,'YYYY-MM-DD').add(1,'days').format('YYYY-MM-DD');\r\n    var cur = startDate;\r\n    var days=0;\r\n    while(cur!==endDate)\r\n    {\r\n      var day=moment(cur).day();\r\n      if(day===0||day===6||holidays.indexOf(cur)!==-1)\r\n      {\r\n\r\n      }\r\n      else\r\n      {\r\n          days++;\r\n      }\r\n      cur=moment(cur,'YYYY-MM-DD').add(1,'days').format('YYYY-MM-DD');\r\n    }\r\n    return days;\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    var from = moment(state[0].startDate).format('YYYY-MM-DD');\r\n    var to = moment(state[0].endDate).format('YYYY-MM-DD');\r\n    var days=diff(from,to);\r\n    setLoading(true);\r\n    axios.post('http://localhost:5000/emp/req',{\r\n            token:localStorage.getItem('token'),\r\n            type:data.type,\r\n            desc:data.desc,\r\n            from,\r\n            to,days\r\n        }).then(res=>{\r\n            if(res.data.error){\r\n  \r\n            }   \r\n            else{\r\n               setSubmitted('yes');\r\n            }\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n  };\r\n\r\n\r\n\r\n  if(loading)\r\n  return <div>Processing</div>\r\n\r\n\r\n  if(submitted)\r\n  return <div>SUBMITTED YOUR REQUEST SUCCESSFULLY  :~)\r\n\r\n  </div>\r\n  return (\r\n    <div id=\"formboxLeave\">  \r\n                <h3>Apply Leave</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div >\r\n                        <div id=\"forminpLeave\">\r\n                            <label>Type</label>\r\n                            <select required name=\"type\" ref={register}>\r\n                                <option disabled hidden selected value=\"\">--select leave type--</option>\r\n                                <option value=\"sick\" id=\"sick\">Sick Leave</option>\r\n                                <option value=\"casual\" id=\"casual\">Casual Leave</option>\r\n                            </select>    \r\n                        </div>\r\n                        \r\n                        <div id=\"forminpLeave\"> \r\n                            <div id=\"leavecalender\">\r\n                                <h4>Leave Calender</h4>\r\n                                <Calendar />\r\n                            </div> \r\n                        </div>\r\n                    </div>  \r\n                    <div id=\"forminpLeave\">\r\n                            <label>Description</label>\r\n                            <textarea  name=\"desc\" ref={register}></textarea>\r\n                    </div>\r\n                    <div id=\"forminpLeave\">\r\n                        \r\n                            <label>From To calender</label>\r\n                            <DateRange\r\n                                  editableDateInputs={true}\r\n                                  onChange={item => {\r\n                                    setState([item.selection])\r\n                                  }}\r\n                                  moveRangeOnFirstSelection={false}\r\n                                  ranges={state}\r\n                            />\r\n                       \r\n                    </div>\r\n                    <input type=\"submit\" />\r\n                </form>\r\n        </div>\r\n  )\r\n  \r\n}\r\n\r\n \r\nexport default ApplyLeave;","D:\\ELMS\\client\\src\\components\\Department.js",["193"],"import React, {  useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Department(props) {\r\n    const [dept,setDept] = useState(props.dept);\r\n    const [del,setDel]= useState(false);\r\n    const [update,setUpdate] = useState(false);\r\n    const [deptName,setDeptName] = useState(dept.name);\r\n    const [deptShortName,setDeptShortName]= useState(dept.short_name);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const handleUpdateDept = (props) => {\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/branch/dept',{\r\n            token:localStorage.getItem('token'),\r\n            code:dept.code,\r\n            name:deptName,\r\n            shortName:deptShortName\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n                {}\r\n            else\r\n                setDept(res.data.result[0]);\r\n            setLoading(false);setUpdate(false);\r\n        }).catch(err=>{\r\n              console.log(err);\r\n              setLoading(false);setUpdate(false);\r\n        })\r\n    }\r\n\r\n    const handleDeleteDept = () => {\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/branch/deldept',{\r\n            token:localStorage.getItem('token'),\r\n            code:dept.code\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n                {\r\n                    alert(\"Department can't be deleted when employees are assigned\")\r\n                }\r\n            else\r\n                setDel(true);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n              console.log(err);\r\n              setLoading(false);\r\n        })\r\n    }\r\n    if(del) return <div></div>\r\n    if(loading)\r\n      return <div>Loading</div>\r\n    else\r\n    if(update)\r\n        return (\r\n            <tr>\r\n                <td>{dept.code}</td>\r\n                <td><input type=\"text\" value={deptName} onChange={e=>setDeptName(e.target.value)} /></td>\r\n                <td><input type=\"text\" value={deptShortName} onChange={e=>setDeptShortName(e.target.value)} /> </td>\r\n                <td><input type=\"button\" value=\"Update\" onClick={handleUpdateDept} /></td>\r\n                <td><button disabled={true} onClick={handleDeleteDept}>delete</button></td>\r\n            </tr>\r\n        )\r\n    else\r\n        return (\r\n            <tr>\r\n                <td>{dept.code}</td>\r\n                <td>{dept.name}</td>\r\n                <td>{dept.short_name} </td>\r\n                <td><button onClick={()=>setUpdate(true)}>update</button></td>\r\n                <td><button onClick={handleDeleteDept}>delete</button></td>\r\n            </tr>\r\n        )\r\n}\r\n\r\nexport default Department;","D:\\ELMS\\client\\src\\components\\Request.js",["194"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport '../styles/Request.css'\r\nfunction Request (props)\r\n{\r\n    const [req,setReq] = useState(props.req);\r\n    const [status,setStatus] = useState('');\r\n    const [remarks,setRemarks] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const branchId=props.branchId;\r\n\r\n    const handleUpdate = () => {\r\n        setLoading(true);\r\n        var from=moment(req.from_date).format('YYYY-MM-DD')\r\n        var to = moment(req.to_date).format('YYYY-MM-DD')\r\n        from = moment(from,'YYYY-MM-DD');\r\n        to = moment(to,'YYYY-MM-DD');\r\n        var days=to.diff(from,'days')+1;\r\n        axios.post('http://localhost:5000/branch/reqUpdate',{\r\n            token:localStorage.getItem('token'),\r\n            reqId:req.leave_id,\r\n            days,\r\n            status,\r\n            remarks\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n            {\r\n                console.log(res.data.error);\r\n            }\r\n            else\r\n            {\r\n                setReq(res.data.result[0]);\r\n            }\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setLoading(false);\r\n        })\r\n\r\n    }\r\n\r\n    const handleUpdateRemarks = () => {\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/branch/reqUpdateRemarks',{\r\n            token:localStorage.getItem('token'),\r\n            reqId:req.leave_id,\r\n            remarks\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n            {\r\n                console.log(res.data.error);\r\n            }\r\n            else\r\n            {\r\n                setReq(res.data.result[0]);\r\n            }\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setLoading(false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n            <div id=\"card\">\r\n                <ul>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line1\"><label>ReqID:&nbsp;&nbsp;</label>{req.leave_id}</label>\r\n                    </div>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line2\"><label>EmpID:&nbsp;&nbsp;</label>{req.emp_id}</label>\r\n                        <label id=\"line2\"><label>Dept Code:&nbsp;&nbsp;</label>{req.dept_code}</label>\r\n                    </div>\r\n                    <div id=\"line3div\">\r\n                        <label id=\"line3\"><label>Name:&nbsp;&nbsp;</label>{req.first_name}{req.last_name}</label>\r\n                    </div>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line4\"><label>From:&nbsp;&nbsp;</label>{moment(req.from_date).format('MM Do YYYY')}</label>\r\n                        <label id=\"line4\"><label>To:&nbsp;&nbsp;</label>{moment(req.to_date).format('MM Do YYYY')}</label>\r\n                    </div>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line51\"><label>Type:&nbsp;&nbsp;</label>{req.type}</label>\r\n                        <label id=\"line52\"><label>Days:&nbsp;&nbsp;</label>{req.days}</label>\r\n                    </div>\r\n                    <div id=\"line3div\">\r\n                        <label id=\"line3\"><label>Desc:&nbsp;&nbsp;</label>{req.description}</label>\r\n                    </div>\r\n                    <div id=\"line3div\">\r\n                        <label id=\"line3\"><label>Admin Remarks:&nbsp;&nbsp;</label>{req.admin_remarks}</label>\r\n                    </div>\r\n\r\n                    {(req.status===\"pending\")&&<div>\r\n                    <div  id=\"line6\">\r\n                        <label>Status</label>\r\n                            <select required id=\"status\" onChange={e=>setStatus(e.target.value)}>\r\n                            <option hidden disabled selected value> --select an option-- </option>\r\n                            <option value=\"accepted\">Accept</option>\r\n                            <option value=\"rejected\">Reject</option>\r\n                        </select>\r\n                    </div>\r\n                    <div id=\"line6\">\r\n                        <label>Remarks</label>\r\n                        <input type=\"text\" id={req.leave_id} onChange={e=>setRemarks(e.target.value)}/>\r\n                    </div>\r\n                    <button id=\"line7\" onClick={handleUpdate} disabled={loading}>Update Status</button>\r\n                    \r\n                    </div>}\r\n\r\n                    {(req.status!==\"pending\")&&\r\n                        <div>\r\n                            <div  id=\"directdiv\">\r\n                                <label id=\"line2\"><label>Status:&nbsp;&nbsp;</label>{req.status}</label>                          \r\n                            </div>\r\n                            {(req.status===\"accepted\")&&(req.branch_manager_remarks===\"------\")&&\r\n                                <div>\r\n                                    <div id=\"line6\">\r\n                                        <label>Remarks</label>\r\n                                        <input type=\"text\" id={req.leave_id} onChange={e=>setRemarks(e.target.value)}/>\r\n                                    </div>\r\n                                    <button id=\"line7\" onClick={handleUpdateRemarks} disabled={loading}>Update Remarks</button>\r\n                                </div>\r\n                            }\r\n                            {(req.branch_manager_remarks!==\"------\")&&\r\n                            <div id=\"line3div\">\r\n                                <label id=\"line2\"><label>Manager Remarks:&nbsp;&nbsp;</label>{req.branch_manager_remarks}</label>   \r\n                            </div> \r\n                            }\r\n                        </div>\r\n                    }  \r\n\r\n                    <button id=\"line7\"><Link to={`/SubadminDashboard/emp/reqs/${req.emp_id}`}>Requests</Link></button>\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Request;","D:\\ELMS\\client\\src\\components\\EmployeeRow.js",[],"D:\\ELMS\\client\\src\\components\\Calendar.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeContainer.js",[],"D:\\ELMS\\client\\src\\components\\AddDept.js",["195"],"import React,{useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\n\r\nimport '../styles/form.css'\r\n\r\nconst DeptSchema = yup.object().shape({\r\n    code : yup.number().required(),\r\n    name : yup.string().required(),\r\n    shortName : yup.string().required()\r\n  });\r\n\r\nfunction AddDept(props) {\r\n    const { register, handleSubmit, errors } = useForm({resolver:yupResolver( DeptSchema )});\r\n    const [error,setError] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const [added,setAdded] = useState(false);\r\n\r\n    const onSubmit=data=>{\r\n        setLoading(true);\r\n        var { code,name,shortName } = data;\r\n        axios.post('http://localhost:5000/admin/deptAdd',{\r\n            token:localStorage.getItem('token'),code,name,shortName\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n                setError(true);\r\n            else\r\n                setAdded(true);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            setError(true);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    if(added)\r\n        return <div>Added Department Succesfully</div>\r\n    if(loading)\r\n        return <div>Loading</div>\r\n    return (\r\n        <div id=\"formbox\">  \r\n                <div>\r\n                    {error && <h3>error occured</h3>}\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <h2> ADD DEPARTMENT</h2>\r\n                    <div id=\"row\">\r\n                        <div id=\"forminp\">\r\n                            <label>Code</label>\r\n                            <input type=\"number\" name=\"code\" ref={register} />\r\n                            {errors.code && <p>{errors.code.message}</p>}   \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"row\">\r\n                        <div id=\"forminp\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" ref={register} />\r\n                            {errors.name && <p>{errors.name.message}</p>}     \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"row\">\r\n                        <div id=\"forminp\">\r\n                            <label>Short Name</label>\r\n                             <input type=\"text\" name=\"shortName\" ref={register} /> \r\n                             {errors.shortName && <p>{errors.shortName.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <input type=\"submit\" />\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddDept;","D:\\ELMS\\client\\src\\components\\AddBranch.js",[],"D:\\ELMS\\client\\src\\components\\Branches.js",["196","197","198"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport BranchContainer from './BranchContainer';\r\nimport '../styles/branchTable.css'\r\nimport ChartDoughnut from './ChartDoughnut';\r\n\r\nfunction Branches() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [branchList,setBranchList] = useState([]);\r\n  const [error,setError] = useState(false);\r\n  const [searchTerm,setSearchTerm] = useState(\"\");\r\n  const [data,setData] = useState({});\r\n  var labels=[]\r\n  var dataOfEmp=[]\r\n  var colors=[]\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/branches',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            setBranchList(res.data.result);\r\n            res.data.result.map(branch=>{\r\n              labels.push(branch.name);\r\n              dataOfEmp.push(branch.emps);\r\n              colors.push(getRandomRgb());\r\n            })\r\n            setData({\r\n              dataOfEmp,\r\n              labels,\r\n              colors\r\n            })\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  function getRandomRgb() {\r\n    var num = Math.round(0xffffff * Math.random());\r\n    var r = num >> 16;\r\n    var g = num >> 8 & 255;\r\n    var b = num & 255;\r\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\r\n  }\r\n\r\n\r\n\r\n\r\n  const dynamicSearch = () => {\r\n    if(searchTerm===\"\")\r\n      return branchList;\r\n    return branchList.filter(branch =>(branch.name).toLowerCase().includes(searchTerm.toLowerCase()))\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div>\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n      <div id=\"b\">\r\n      <div>\r\n        <input type=\"text\" value={searchTerm} onChange={(e)=>setSearchTerm(e.target.value)} placeholder=\"Search for branch\"/>\r\n      </div>\r\n      <table>\r\n        <div>\r\n          <thead>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Location</th>\r\n            <th>Update</th>\r\n            <th>Manage</th>\r\n            <th>Delete</th>\r\n          </thead>\r\n        </div>\r\n          <BranchContainer branchList={dynamicSearch() } />\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <ChartDoughnut data={data}/>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n \r\nexport default Branches;","D:\\ELMS\\client\\src\\components\\AddDepartment.js",[],"D:\\ELMS\\client\\src\\components\\UpdateEmployee.js",["199"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\n\r\nimport '../styles/empUpdateForm.css'\r\n\r\nconst EmpSchema = yup.object().shape({\r\n    deptCode : yup.string().required(),\r\n    firstName : yup.string().required(),\r\n    lastName : yup.string(),\r\n    email : yup.string().email().required(),\r\n    password :yup.string().min(5).required(),\r\n    gender : yup.mixed().oneOf([\"MALE\",\"FEMALE\",\"OTHER\"]),\r\n    phone : yup.number().required(),\r\n    casualLeaves : yup.number().positive().integer().required(),\r\n    sickLeaves :  yup.number().positive().integer().required(),\r\n    unpaidLeaves : yup.number().integer().required()\r\n  });\r\n\r\nfunction EmployeeUpdate(props) {\r\n\r\n    const { register, handleSubmit,reset, errors } = useForm({resolver:yupResolver( EmpSchema )});\r\n    var emp_id = props.match.params.id;\r\n    const [depts,setDepts] = useState([]);\r\n    const [branchId,setBranchId] = useState('');\r\n    const [deleted,setDeleted] = useState(false);\r\n    const [curdept,setCurDept] = useState('');\r\n    const [branches,setBranches] = useState([]);\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n        console.log(res.data.result)\r\n            setBranches(res.data.result);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        axios.post('http://localhost:5000/admin/dept',{\r\n            token:localStorage.getItem('token'),\r\n            id:branchId\r\n        }).then(res=>{\r\n            setDepts(res.data.result);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n          })\r\n          // eslint-disable-next-line\r\n    },[branchId])\r\n\r\n    useEffect(()=>{\r\n        axios.post('http://localhost:5000/branch/emp',{\r\n          token:localStorage.getItem('token'),\r\n          empId:emp_id\r\n        }).then(res=>{\r\n            var data=res.data.result[0];\r\n            setCurDept(data.dept_code);\r\n            if(data){\r\n                var date= data.dob;\r\n                date=moment(date).format('YYYY-MM-DD');\r\n                reset({\r\n                    id : data.branch_id,\r\n                    deptCode : data.dept_code,\r\n                    role : data.role,\r\n                    firstName : data.first_name,\r\n                    lastName : data.last_name,\r\n                    email : data.email,\r\n                    password : data.password,\r\n                    gender : data.gender,\r\n                    DOB : date,\r\n                    country : data.country,\r\n                    city : data.city,\r\n                    address : data.address,\r\n                    phone : data.phone_number,\r\n                    casualLeaves : data.casual_leaves,\r\n                    sickLeaves : data.sick_leaves,\r\n                    unpaidLeaves : data.unpaid_leaves\r\n                })\r\n                setBranchId(data.branch_id)\r\n            }\r\n            }).catch(err=>{\r\n              console.log(err);\r\n            })\r\n            // eslint-disable-next-line\r\n      },[])\r\n\r\n\r\n    const onSubmit=data=>{\r\n        var { id,deptCode ,role ,firstName,lastName,email,password,gender,DOB,country,city,address,phone,casualLeaves,sickLeaves,unpaidLeaves} = data;\r\n        axios.post('http://localhost:5000/branch/empUpdate',{\r\n            token:localStorage.getItem('token'),\r\n            id,\r\n            empId:emp_id,\r\n            deptCode,role,firstName,lastName,\r\n            email,password,gender,DOB,country,city,\r\n            address,phone,casualLeaves,sickLeaves,unpaidLeaves\r\n        }).then(res=>{\r\n            var data=res.data.result[0];\r\n            if(data)\r\n            {\r\n                var date= data.dob;\r\n                date=moment(date).format('YYYY-MM-DD');\r\n                reset({\r\n                    id :data.branch_id,\r\n                    deptCode : data.dept_code,\r\n                    role : data.role,\r\n                    firstName : data.first_name,\r\n                    lastName : data.last_name,\r\n                    email : data.email,\r\n                    password : data.password,\r\n                    gender : data.gender,\r\n                    DOB : date,\r\n                    country : data.country,\r\n                    city : data.city,\r\n                    address : data.address,\r\n                    phone : data.phone_number,\r\n                    casualLeaves : data.casual_leaves,\r\n                    sickLeaves : data.sick_leaves,\r\n                    unpaidLeaves : data.unpaid_leaves\r\n                })\r\n                setBranchId(data.branch_id)\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleDelete=()=>{\r\n        axios.post('http://localhost:5000/branch/empDelete',{\r\n            token:localStorage.getItem('token'),\r\n            empId:emp_id\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n               {}\r\n            else\r\n                setDeleted(true);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    if(deleted)\r\n        return <div>\r\n            <h1>Employee is Deleted  :~(</h1>\r\n        </div>\r\n\r\n    return (\r\n        <div id=\"formbox\"> \r\n        <h3>UPDATE EMPLOYEE DETAILS</h3> \r\n        <h5>Employee Id :  {emp_id}</h5>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div id=\"row\">\r\n                    <div id=\"forminp\">\r\n                            <label>Branch</label>\r\n                            <select name=\"id\" onChange={e=>setBranchId(e.target.value)} ref={register} >   \r\n                               { branches&&branches.map(b=><option id={b.branch_id} value={b.branch_id}>{b.name}</option>) }\r\n                            </select>\r\n                            {errors.id && <p>{errors.id.message}</p>}  \r\n                    </div>\r\n                </div>\r\n                <div id=\"row\">\r\n                    <div id=\"forminp\">\r\n                        <label >Choose a dept:</label>\r\n                        <select  name=\"deptCode\" ref={register}>\r\n                          { depts.map((dept)=><option value={dept.code} id={dept.code}>{dept.name}</option>) }\r\n                        </select>\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Gender</label>\r\n                        <select  required name=\"gender\" ref={register}>\r\n                            <option hidden disabled selected value> -- select gender -- </option>\r\n                            <option value=\"MALE\" id=\"MALE\">Male</option>\r\n                            <option value=\"FEMALE\" id=\"FEMALE\">Female</option>\r\n                            <option value=\"OTHER\" id=\"OTHER\">Other</option>\r\n                        </select>\r\n                        {errors.gender && <p>{errors.gender.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Date of birth</label>\r\n                        <input  required type=\"date\" name=\"DOB\" ref={register} />\r\n                        {errors.DOB && <p>{errors.DOB.message}</p>}\r\n                    </div>\r\n                </div>\r\n                <div id=\"row\">\r\n                    <div id=\"forminp\">\r\n                        <label>Role</label>\r\n                        <input type=\"text\" name=\"role\" ref={register} />\r\n                        {errors.role && <p>{errors.role.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" name=\"firstName\" ref={register} />\r\n                        {errors.firstName && <p>{errors.firstName.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" name=\"lastName\" ref={register} />\r\n                        {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                    </div> \r\n                </div>\r\n                <div id=\"row\">\r\n                    <div id=\"forminp\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" ref={register} />\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Password</label>\r\n                        <input type=\"text\" name=\"password\" ref={register} />\r\n                        {errors.password && <p>{errors.password.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Phone number</label>\r\n                        <input type=\"text\" name=\"phone\" ref={register} />\r\n                        {errors.phone && <p>{errors.phone.message}</p>}\r\n                    </div>\r\n                </div>\r\n                <div id=\"row\">\r\n                    <div id=\"forminp\">\r\n                        <label>Country</label>\r\n                        <input type=\"text\" name=\"country\" ref={register} />\r\n                        {errors.country && <p>{errors.country.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>City</label>\r\n                        <input type=\"text\" name=\"city\" ref={register} />\r\n                        {errors.country && <p>{errors.city.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Address</label>\r\n                        <input type=\"text\" name=\"address\" ref={register} />\r\n                        {errors.address && <p>{errors.address.message}</p>}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div id=\"row\">\r\n                    <div id=\"forminp\">\r\n                        <label>Casual Leaves remaining</label>\r\n                        <input type=\"number\" name=\"casualLeaves\" ref={register} />\r\n                        {errors.casualLeaves && <p>{errors.casualLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Sick leaves remaining</label>\r\n                        <input type=\"number\" name=\"sickLeaves\" ref={register} />\r\n                        {errors.sickLeaves && <p>{errors.sickLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Unpaid leaves remaining</label>\r\n                        <input type=\"number\" name=\"unpaidLeaves\" ref={register} />\r\n                        {errors.unpaidLeaves && <p>{errors.unpaidLeaves.message}</p>}\r\n                    </div>\r\n                </div>\r\n                <input id=\"submitbutton\" type=\"submit\" />\r\n                <button id=\"submitbutton\" onClick={handleDelete}>Delete</button>\r\n            </form>\r\n    </div>\r\n    )\r\n}\r\n \r\nexport default EmployeeUpdate;","D:\\ELMS\\client\\src\\components\\AddEmployee.js",[],"D:\\ELMS\\client\\src\\components\\Departments.js",["200"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DepartmentContainer from './DepartmentContainer';\r\n\r\nimport '../styles/branchTable.css'\r\n\r\nfunction Departments() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [deptList,setDeptList] = useState([]);\r\n  const [error,setError] = useState(false);\r\n  const [searchBranch,setSearchBranch] = useState(\"ALL\");\r\n\r\n  const [branches,setBranches] = useState([]);\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n        setBranches(res.data.result);\r\n        setLoading(false);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n      // eslint-disable-next-line\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/depts',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n        console.log(res.data.result)\r\n            setDeptList(res.data.result);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  const dynamicSearch = () => {\r\n      console.log(deptList)\r\n    if(searchBranch===\"ALL\")\r\n      return deptList;\r\n    return deptList.filter(dept =>dept.branch_id==searchBranch)\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div>\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n      <div id=\"b\">\r\n      <div>\r\n            <select onChange={(e)=>setSearchBranch(e.target.value)} >\r\n              <option selected value=\"ALL\" id=\"ALL\"> ALL BRANCHES </option>\r\n              { branches.map((branch)=><option value={branch.branch_id} id={branch.branch_id}>{branch.name}</option>) }\r\n            </select>\r\n      </div>\r\n      <table>\r\n        <div>\r\n          <thead>\r\n            <th>Branch ID</th>\r\n            <th>Code</th>\r\n            <th>Name</th>\r\n            <th>Short Name</th>\r\n          </thead>\r\n        </div>\r\n          <DepartmentContainer deptList={dynamicSearch() } />\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n \r\nexport default Departments;","D:\\ELMS\\client\\src\\components\\Employees.js",["201"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport '../styles/branchTable.css'\r\nimport EmployeeContainer2 from './EmployeeContainer2';\r\n\r\nfunction Employees() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [empList,setEmpList] = useState([]);\r\n  const [error,setError] = useState(false);\r\n  const [searchBranch,setSearchBranch] = useState(\"ALL\");\r\n  const [searchTerm,setSearchTerm] = useState(\"\");\r\n  const [branches,setBranches] = useState([]);\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n      console.log(res.data.result)\r\n        setBranches(res.data.result);\r\n        setLoading(false);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n      // eslint-disable-next-line\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/emps',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            console.log(res.data.result)\r\n            setEmpList(res.data.result);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  const dynamicSearch = () => {\r\n    var emps;\r\n    if(searchBranch===\"ALL\")\r\n        emps = empList;\r\n    else\r\n        emps = empList.filter(emp => emp.branch_id==searchBranch)\r\n    if(searchTerm===\"\")\r\n      return emps;\r\n    console.log(emps)\r\n    return emps.filter(emp =>(emp.first_name+emp.last_name).toLowerCase().includes(searchTerm.toLowerCase()))\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div>\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n     \r\n      <div>\r\n            <select onChange={(e)=>setSearchBranch(e.target.value)} >\r\n              <option selected value=\"ALL\" id=\"ALL\"> ALL BRANCHES </option>\r\n              { branches.map((branch)=><option value={branch.branch_id} id={branch.branch_id}>{branch.name}</option>) }\r\n            </select>\r\n      </div>\r\n      <div>\r\n        <h3>Search For An Employee</h3>\r\n        <input  type=\"text\" value={searchTerm} onChange={(e)=>setSearchTerm(e.target.value)} placeholder=\"Search for an employee name\"/>\r\n      </div>\r\n      <div>\r\n          <EmployeeContainer2 emps={dynamicSearch() } />\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n \r\nexport default Employees;","D:\\ELMS\\client\\src\\components\\UpdateBranch.js",[],"D:\\ELMS\\client\\src\\components\\DepartmentContainer.js",[],"D:\\ELMS\\client\\src\\components\\BranchContainer.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeContainer2.js",[],"D:\\ELMS\\client\\src\\components\\Branch.js",[],"D:\\ELMS\\client\\src\\components\\Employee.js",[],"D:\\ELMS\\client\\src\\components\\Requests.js",["202"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport RequestContainer from './RequestContainer';\r\n\r\n\r\nfunction Requests() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [reqList,setReqList] = useState([]);\r\n  const [error,setError] = useState(false);\r\n  const [searchBranch,setSearchBranch] = useState(\"ALL\");\r\n\r\n  const [branches,setBranches] = useState([]);\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n        setBranches(res.data.result);\r\n        setLoading(false);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n      // eslint-disable-next-line\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/reqs',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            setReqList(res.data.result);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  const dynamicSearch = () => {\r\n    if(searchBranch===\"ALL\")\r\n      return reqList;\r\n    return reqList.filter(req =>req.branch_id==searchBranch)\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div>\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n      <div id=\"b\">\r\n      <div>\r\n            <select onChange={(e)=>setSearchBranch(e.target.value)} >\r\n              <option selected value=\"ALL\" id=\"ALL\"> ALL BRANCHES </option>\r\n              { branches.map((branch)=><option value={branch.branch_id} id={branch.branch_id}>{branch.name}</option>) }\r\n            </select>\r\n      </div>\r\n          <RequestContainer reqList={dynamicSearch() } />\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n \r\nexport default Requests;","D:\\ELMS\\client\\src\\components\\RequestContainer.js",[],"D:\\ELMS\\client\\src\\components\\Request2.js",["203"],"import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport '../styles/Request.css'\r\nfunction Request2 (props)\r\n{\r\n    const [req,setReq] = useState(props.req);\r\n    const [status,setStatus] = useState('');\r\n    const [remarks,setRemarks] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleUpdate = () => {\r\n        setLoading(true);\r\n        var from=moment(req.from_date).format('YYYY-MM-DD')\r\n        var to = moment(req.to_date).format('YYYY-MM-DD')\r\n        from = moment(from,'YYYY-MM-DD');\r\n        to = moment(to,'YYYY-MM-DD');\r\n        var days=to.diff(from,'days')+1;\r\n        axios.post('http://localhost:5000/admin/reqUpdate',{\r\n            token:localStorage.getItem('token'),\r\n            reqId:req.leave_id,\r\n            status,\r\n            remarks\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n            {\r\n                console.log(res.data.error);\r\n            }\r\n            else\r\n            {\r\n                setReq(res.data.result[0]);\r\n            }\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setLoading(false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n            <div id=\"card\">\r\n                <ul>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line1\"><label>ReqID:&nbsp;&nbsp;</label>{req.leave_id}</label>\r\n                    </div>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line2\"><label>EmpID:&nbsp;&nbsp;</label>{req.emp_id}</label>\r\n                        <label id=\"line2\"><label>Dept Code:&nbsp;&nbsp;</label>{req.dept_code}</label>\r\n                    </div>\r\n                    <div id=\"line3div\">\r\n                        <label id=\"line3\"><label>Name:&nbsp;&nbsp;</label>{req.first_name}{req.last_name}</label>\r\n                    </div>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line4\"><label>From:&nbsp;&nbsp;</label>{moment(req.from_date).format('MM Do YYYY')}</label>\r\n                        <label id=\"line4\"><label>To:&nbsp;&nbsp;</label>{moment(req.to_date).format('MM Do YYYY')}</label>\r\n                    </div>\r\n                    <div id=\"directdiv\">\r\n                        <label id=\"line51\"><label>Type:&nbsp;&nbsp;</label>{req.type}</label>\r\n                        <label id=\"line52\"><label>Days:&nbsp;&nbsp;</label>{req.days}</label>\r\n                    </div>\r\n                    <div id=\"line3div\">\r\n                        <label id=\"line3\"><label>Desc:&nbsp;&nbsp;</label>{req.description}</label>\r\n                    </div>\r\n                    {(req.status===\"pending\")&&<div>\r\n                    \r\n                    <div  id=\"line6\">\r\n                        <label>Status</label>\r\n                            <select required id=\"status\" onChange={e=>setStatus(e.target.value)}>\r\n                            <option hidden disabled selected value> --select an option-- </option>\r\n                            <option value=\"accepted\">Accept</option>\r\n                            <option value=\"rejected\">Reject</option>\r\n                        </select>\r\n                    </div>\r\n                    <div id=\"line6\">\r\n                        <label>Remarks</label>\r\n                        <input type=\"text\" id={req.leave_id} onChange={e=>setRemarks(e.target.value)}/>\r\n                    </div>\r\n                    <button id=\"line7\" onClick={handleUpdate} disabled={loading}>Update Status</button>\r\n                    \r\n                    </div>}\r\n\r\n                    {(req.status!==\"pending\")&&\r\n                        <div>\r\n                        <div  id=\"directdiv\">\r\n                        <label id=\"line2\"><label>Status:&nbsp;&nbsp;</label>{req.status}</label>\r\n                                                \r\n                        </div>\r\n                        <div id=\"line3div\">\r\n                        <label id=\"line2\"><label>Remarks:&nbsp;&nbsp;</label>{req.admin_remarks}</label>\r\n                            \r\n                        </div> \r\n                        </div>\r\n                    }\r\n                        \r\n                    <button id=\"line7\"><Link to={`/AdminDashboard/emp/reqs/${req.emp_id}`}>Requests</Link></button>\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Request2;","D:\\ELMS\\client\\src\\components\\OldRequests.js",[],"D:\\ELMS\\client\\src\\components\\ChartDoughnut.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":72,"column":17,"nodeType":"210","endLine":72,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":62,"column":17,"nodeType":"210","endLine":62,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":45,"column":15,"nodeType":"210","endLine":45,"endColumn":41},{"ruleId":"211","severity":1,"message":"212","line":86,"column":15,"nodeType":"213","messageId":"214","endLine":86,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":98,"column":11,"nodeType":"213","messageId":"214","endLine":98,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":20,"column":35,"nodeType":"217","messageId":"218","endLine":20,"endColumn":41},{"ruleId":"215","severity":1,"message":"219","line":1,"column":18,"nodeType":"217","messageId":"218","endLine":1,"endColumn":27},{"ruleId":"215","severity":1,"message":"220","line":13,"column":11,"nodeType":"217","messageId":"218","endLine":13,"endColumn":19},{"ruleId":"215","severity":1,"message":"219","line":1,"column":26,"nodeType":"217","messageId":"218","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"222","line":22,"column":39,"nodeType":"223","messageId":"224","endLine":22,"endColumn":41},{"ruleId":"225","severity":1,"message":"226","line":44,"column":17,"nodeType":"213","messageId":"227","endLine":44,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":44,"column":22,"nodeType":"213","messageId":"227","endLine":44,"endColumn":23},{"ruleId":"215","severity":1,"message":"228","line":31,"column":12,"nodeType":"217","messageId":"218","endLine":31,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":45,"column":49,"nodeType":"213","messageId":"214","endLine":45,"endColumn":51},{"ruleId":"211","severity":1,"message":"212","line":46,"column":51,"nodeType":"213","messageId":"214","endLine":46,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":41,"column":46,"nodeType":"213","messageId":"214","endLine":41,"endColumn":48},{"ruleId":"215","severity":1,"message":"229","line":19,"column":13,"nodeType":"217","messageId":"218","endLine":19,"endColumn":17},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'branchId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-mixed-operators","Unexpected mix of '>>' and '&'.","unexpectedMixedOperator","'curdept' is assigned a value but never used.","'days' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]