[{"D:\\ELMS\\client\\src\\index.js":"1","D:\\ELMS\\client\\src\\App.js":"2","D:\\ELMS\\client\\src\\components\\PrivateRoute.js":"3","D:\\ELMS\\client\\src\\components\\dashboards\\SubadminDashboard.js":"4","D:\\ELMS\\client\\src\\components\\dashboards\\AdminDashboard.js":"5","D:\\ELMS\\client\\src\\components\\Login.js":"6","D:\\ELMS\\client\\src\\components\\dashboards\\EmployeeDashboard.js":"7","D:\\ELMS\\client\\src\\components\\AddDept.js":"8","D:\\ELMS\\client\\src\\components\\UpdateBranch.js":"9","D:\\ELMS\\client\\src\\components\\AddDepartment.js":"10","D:\\ELMS\\client\\src\\components\\AddBranch.js":"11","D:\\ELMS\\client\\src\\components\\EmployeeUpdate.js":"12","D:\\ELMS\\client\\src\\components\\EmployeeCreate.js":"13","D:\\ELMS\\client\\src\\components\\AddEmployee.js":"14","D:\\ELMS\\client\\src\\components\\UpdateEmployee.js":"15","D:\\ELMS\\client\\src\\components\\RequestsBranch.js":"16","D:\\ELMS\\client\\src\\components\\OldRequestsBranch.js":"17","D:\\ELMS\\client\\src\\components\\EmployeeRequests.js":"18","D:\\ELMS\\client\\src\\components\\EmployeesBranch.js":"19","D:\\ELMS\\client\\src\\components\\DepartmentsBranch.js":"20","D:\\ELMS\\client\\src\\components\\Branches.js":"21","D:\\ELMS\\client\\src\\components\\UpdateHolidays.js":"22","D:\\ELMS\\client\\src\\components\\Departments.js":"23","D:\\ELMS\\client\\src\\components\\Employees.js":"24","D:\\ELMS\\client\\src\\components\\OldRequests.js":"25","D:\\ELMS\\client\\src\\components\\Requests.js":"26","D:\\ELMS\\client\\src\\components\\RequestHistory.js":"27","D:\\ELMS\\client\\src\\components\\EmployeeProfile.js":"28","D:\\ELMS\\client\\src\\components\\ApplyLeave.js":"29","D:\\ELMS\\client\\src\\components\\DepartmentContainer.js":"30","D:\\ELMS\\client\\src\\components\\ChartDoughnut.js":"31","D:\\ELMS\\client\\src\\components\\BranchContainer.js":"32","D:\\ELMS\\client\\src\\components\\Department.js":"33","D:\\ELMS\\client\\src\\components\\Request.js":"34","D:\\ELMS\\client\\src\\components\\EmployeeContainer.js":"35","D:\\ELMS\\client\\src\\components\\EmployeeContainer2.js":"36","D:\\ELMS\\client\\src\\components\\RequestContainer.js":"37","D:\\ELMS\\client\\src\\components\\Calendar.js":"38","D:\\ELMS\\client\\src\\components\\Branch.js":"39","D:\\ELMS\\client\\src\\components\\EmployeeRow.js":"40","D:\\ELMS\\client\\src\\components\\Request2.js":"41","D:\\ELMS\\client\\src\\components\\Employee.js":"42","D:\\ELMS\\client\\src\\components\\SubadminToday.js":"43","D:\\ELMS\\client\\src\\components\\AdminToday.js":"44","D:\\ELMS\\client\\src\\components\\TodayContainer.js":"45"},{"size":230,"mtime":1619443191665,"results":"46","hashOfConfig":"47"},{"size":1065,"mtime":1617701092325,"results":"48","hashOfConfig":"47"},{"size":457,"mtime":1617701092539,"results":"49","hashOfConfig":"47"},{"size":4744,"mtime":1619768255296,"results":"50","hashOfConfig":"47"},{"size":5813,"mtime":1619768204730,"results":"51","hashOfConfig":"47"},{"size":3963,"mtime":1619767795891,"results":"52","hashOfConfig":"47"},{"size":2769,"mtime":1619586680260,"results":"53","hashOfConfig":"47"},{"size":2748,"mtime":1619586679996,"results":"54","hashOfConfig":"47"},{"size":3570,"mtime":1619586680252,"results":"55","hashOfConfig":"47"},{"size":3824,"mtime":1619770461683,"results":"56","hashOfConfig":"47"},{"size":3248,"mtime":1619443697656,"results":"57","hashOfConfig":"47"},{"size":10443,"mtime":1619586680244,"results":"58","hashOfConfig":"47"},{"size":8980,"mtime":1619586680236,"results":"59","hashOfConfig":"47"},{"size":9153,"mtime":1619769674194,"results":"60","hashOfConfig":"47"},{"size":10899,"mtime":1619586680252,"results":"61","hashOfConfig":"47"},{"size":1776,"mtime":1619768080248,"results":"62","hashOfConfig":"47"},{"size":3713,"mtime":1619586680252,"results":"63","hashOfConfig":"47"},{"size":4995,"mtime":1619586680236,"results":"64","hashOfConfig":"47"},{"size":1837,"mtime":1619586680244,"results":"65","hashOfConfig":"47"},{"size":1346,"mtime":1619586680220,"results":"66","hashOfConfig":"47"},{"size":2832,"mtime":1619586680004,"results":"67","hashOfConfig":"47"},{"size":5029,"mtime":1619586680260,"results":"68","hashOfConfig":"47"},{"size":2316,"mtime":1619586680068,"results":"69","hashOfConfig":"47"},{"size":2911,"mtime":1619586680244,"results":"70","hashOfConfig":"47"},{"size":4235,"mtime":1619586680244,"results":"71","hashOfConfig":"47"},{"size":2665,"mtime":1619768093849,"results":"72","hashOfConfig":"47"},{"size":4205,"mtime":1619586680252,"results":"73","hashOfConfig":"47"},{"size":3717,"mtime":1619442903372,"results":"74","hashOfConfig":"47"},{"size":5490,"mtime":1619767795880,"results":"75","hashOfConfig":"47"},{"size":307,"mtime":1619441539338,"results":"76","hashOfConfig":"47"},{"size":713,"mtime":1619441146704,"results":"77","hashOfConfig":"47"},{"size":300,"mtime":1619415692271,"results":"78","hashOfConfig":"47"},{"size":2721,"mtime":1619586680012,"results":"79","hashOfConfig":"47"},{"size":5060,"mtime":1619769281959,"results":"80","hashOfConfig":"47"},{"size":290,"mtime":1619415692311,"results":"81","hashOfConfig":"47"},{"size":257,"mtime":1619441539355,"results":"82","hashOfConfig":"47"},{"size":274,"mtime":1619415692391,"results":"83","hashOfConfig":"47"},{"size":1252,"mtime":1617701092329,"results":"84","hashOfConfig":"47"},{"size":1322,"mtime":1619586680004,"results":"85","hashOfConfig":"47"},{"size":1406,"mtime":1619441539358,"results":"86","hashOfConfig":"47"},{"size":3631,"mtime":1619769317918,"results":"87","hashOfConfig":"47"},{"size":915,"mtime":1619441539349,"results":"88","hashOfConfig":"47"},{"size":3083,"mtime":1619768561076,"results":"89","hashOfConfig":"47"},{"size":2011,"mtime":1619767928418,"results":"90","hashOfConfig":"47"},{"size":3245,"mtime":1619770688806,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1kqbsgt",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ELMS\\client\\src\\index.js",[],["193","194"],"D:\\ELMS\\client\\src\\App.js",[],"D:\\ELMS\\client\\src\\components\\PrivateRoute.js",[],"D:\\ELMS\\client\\src\\components\\dashboards\\SubadminDashboard.js",["195"],"D:\\ELMS\\client\\src\\components\\dashboards\\AdminDashboard.js",["196"],"D:\\ELMS\\client\\src\\components\\Login.js",["197","198"],"D:\\ELMS\\client\\src\\components\\dashboards\\EmployeeDashboard.js",["199","200","201","202"],"import React,{ useState,useEffect } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport EmployeeProfile from '../EmployeeProfile';\r\nimport ApplyLeave from '../ApplyLeave';\r\nimport RequestHistory from '../RequestHistory';\r\nimport '../sidebar.css'\r\nimport logo from '../logopic.png'\r\nfunction EmployeeDashboard(props) {\r\n  let { path, url } = useRouteMatch();\r\n  const [close,setClose] = useState(false);\r\n\r\n  const funwidth = () => {\r\n    if(close)\r\n      return { width:\"50px\" }\r\n    return {}\r\n  }\r\n\r\n  const fundisplay = () => {\r\n    if(close)\r\n      return { display:\"none\" }\r\n    return {}\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setClose(!close);\r\n  }\r\n\r\n  // handle click event of logout button\r\n  const handleLogout = () => {   \r\n    localStorage.setItem('token','');   \r\n    props.history.push('/');\r\n  }\r\n \r\n  return (\r\n    <div id=\"side\">\r\n    <div class=\"header-admin\">\r\n      <div class=\"header-left-admin\">\r\n      <Link to={`${url}/profile`}><a href=\"#index\" class=\"logo\">\r\n        <img id=\"logo\" src={logo} alt=\"Logo\" height=\"85\"/>\r\n        </a>\r\n        </Link>\r\n      </div>\r\n      <div class=\"page-title-box-admin\">\r\n      <h3 >Shri Chandra Bulk Cargo Services Pvt.Ltd</h3>\r\n    </div>\r\n    </div>\r\n   \r\n    <div class=\"sidebar\" id=\"sidebar\" style={funwidth()}>\r\n        <div class=\"sidebar-inner slimscroll\">\r\n          <a id=\"toggle_btn\" href=\"javascript:void(0)\" onClick={handleClick}>\r\n            <span class=\"bar-icon\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </span>\r\n          </a>\r\n         <div id=\"sidebar-menu\" class=\"sidebar-menu\" style={fundisplay()}>\r\n              <ul>\r\n                <li>\r\n                  <Link to={`${url}/profile`}>Profile</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/leave`}>Apply Leave</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/requests`}>Leave History</Link>\r\n                </li>\r\n                <li class=\"sub-logout\">\r\n                    <a onClick={handleLogout}>Logout</a>\r\n                </li>\r\n              </ul>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      <Switch>\r\n              <Route exact path={path}>\r\n                <EmployeeProfile />\r\n              </Route>\r\n              <Route path={`${path}/profile`}>\r\n                <EmployeeProfile />\r\n              </Route>\r\n              <Route path={`${path}/leave`}>\r\n                <ApplyLeave />\r\n              </Route>\r\n              <Route path={`${path}/requests`}>\r\n                <RequestHistory />\r\n              </Route>\r\n      </Switch>\r\n    </div>\r\n    \r\n  );\r\n}\r\n \r\nexport default EmployeeDashboard;\r\n","D:\\ELMS\\client\\src\\components\\AddDept.js",["203","204"],"import React,{useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport \"../styles/form.css\"\r\n\r\nconst DeptSchema = yup.object().shape({\r\n    code : yup.number().required(),\r\n    code : yup.number().required().typeError(\"Enter a valid branch code\"),\r\n    name : yup.string().required(),\r\n    shortName : yup.string().required()\r\n  });\r\n\r\nfunction AddDept(props) {\r\n    const { register, handleSubmit, errors } = useForm({resolver:yupResolver( DeptSchema )});\r\n    const [error,setError] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const [added,setAdded] = useState(false);\r\n\r\n    const onSubmit=data=>{\r\n        setLoading(true);\r\n        var { code,name,shortName } = data;\r\n        axios.post('http://localhost:5000/admin/deptAdd',{\r\n            token:localStorage.getItem('token'),code,name,shortName\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n                setError(true);\r\n            else\r\n                setAdded(true);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            setError(true);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    if(added)\r\n        return <div>Added Department Succesfully</div>\r\n    if(loading)\r\n        return <div>Loading</div>\r\n    return (\r\n        <div id=\"formbox\">  \r\n                <div>\r\n                    {error && <h3>error occured</h3>}\r\n                </div>\r\n                <h3> Add Department</h3>\r\n                <form class=\"branch\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <div id=\"forminp\">\r\n                            <label>Code</label>\r\n                            <input type=\"number\" name=\"code\" ref={register} />\r\n                            {errors.code && <p>{errors.code.message}</p>}   \r\n                        </div>\r\n                        <div id=\"forminp\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" ref={register} />\r\n                            {errors.name && <p>{errors.name.message}</p>}     \r\n                        </div>\r\n                        <div id=\"forminp\">\r\n                            <label>Short Name</label>\r\n                             <input type=\"text\" name=\"shortName\" ref={register} /> \r\n                             {errors.shortName && <p>{errors.shortName.message}</p>}\r\n                        </div>\r\n                        <div id=\"forminp\">\r\n                    <input id=\"submitbutton\"type=\"submit\" />\r\n                    </div>\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddDept;","D:\\ELMS\\client\\src\\components\\UpdateBranch.js",[],"D:\\ELMS\\client\\src\\components\\AddDepartment.js",["205","206"],"D:\\ELMS\\client\\src\\components\\AddBranch.js",["207"],"import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\n\r\nimport \"../styles/form.css\"\r\n\r\nconst BranchSchema = yup.object().shape({\r\n    id : yup.number().required(),\r\n    id : yup.number().required().typeError(\"Enter a valid branch ID\"),\r\n    name : yup.string().required(),\r\n    location : yup.string().required(),\r\n    password :yup.string().min(5).required()\r\n  });\r\n\r\nfunction AddBranch(props) {\r\n    const { register, handleSubmit, errors } = useForm({resolver:yupResolver( BranchSchema )});\r\n    const [error,setError] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const [added,setAdded] = useState(false);\r\n    const [branch,setBranch]=useState('');\r\n\r\n    const onSubmit=data=>{\r\n        setLoading(true);\r\n        var { id,name,location,password } = data;\r\n        setBranch(name);    \r\n        axios.post('http://localhost:5000/admin/branchAdd',{\r\n            token:localStorage.getItem('token'),id,\r\n            name,location,password\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n                setError(true);\r\n            else\r\n                setAdded(true);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            setError(true);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    if(added)\r\n        return <div>Added {branch} Branch Succesfully</div>\r\n    if(loading)\r\n        return <div>Loading</div>\r\n    return (\r\n        <div id=\"formbox\">  \r\n                <div>\r\n                    {error && <h3>ID has been assigned to another branch</h3>}\r\n                </div>\r\n                <h3>Add Branch</h3>\r\n                <form class=\"branch\"onSubmit={handleSubmit(onSubmit)}>\r\n                        <div id=\"forminp\">\r\n                            <label>Branch ID</label>\r\n                            <input type=\"number\" name=\"id\" ref={register} />   \r\n                            {errors.id && <p>{errors.id.message}</p>}  \r\n                        </div>\r\n                        <div id=\"forminp\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" ref={register} />\r\n                            {errors.name && <p>{errors.name.message}</p>}     \r\n                        </div>\r\n                        <div id=\"forminp\">\r\n                            <label>Location</label>\r\n                             <input type=\"text\" name=\"location\" ref={register} /> \r\n                             {errors.location && <p>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div id=\"forminp\">\r\n                            <label>Branch Manager Password</label>\r\n                            <input type=\"text\" name=\"password\" ref={register} />\r\n                            {errors.password && <p>{errors.password.message}</p>}   \r\n                        </div>\r\n                        <div id=\"forminp\">\r\n                        <input id=\"submitbutton\"type=\"submit\" />\r\n                        </div>\r\n                  \r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBranch;","D:\\ELMS\\client\\src\\components\\EmployeeUpdate.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeCreate.js",["208","209","210","211","212","213","214","215","216","217"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport \"../styles/form.css\"\r\n\r\nconst EmpSchema = yup.object().shape({\r\n    empId: yup.string().required(),\r\n    deptCode : yup.string().required(),\r\n    firstName : yup.string().required(),\r\n    empId: yup.string().required(\"Required Field\"),\r\n    deptCode : yup.string().required(\"Required Field\"),\r\n    firstName : yup.string().required(\"Required Field\"),\r\n    lastName : yup.string(),\r\n    email : yup.string().email().required(),\r\n    password :yup.string().min(5).required(),\r\n    gender : yup.mixed().oneOf([\"MALE\",\"FEMALE\",\"OTHER\"]),\r\n    phone : yup.number().required(),\r\n    casualLeaves : yup.number().positive().integer().required(),\r\n    sickLeaves :  yup.number().positive().integer().required(),\r\n    unpaidLeaves : yup.number().integer().required(),\r\n    email : yup.string().email(\"Email Required\").required(\"Email Required\"),\r\n    password :yup.string().min(5,\"Min of length 5\").required(\"Min of length 5\"),\r\n    gender : yup.mixed().oneOf([\"MALE\",\"FEMALE\",\"OTHER\"],\"Select an option\"),\r\n    phone : yup.number().required(\"Enter phone number\").typeError(\"Enter phone number\"),\r\n    casualLeaves : yup.number().positive(\"Enter a +ve number\").integer(\"Enter a number\").required(\"Enter a number\").typeError(\"Enter a number\"),\r\n    sickLeaves :  yup.number().positive(\"Enter a +ve number\").integer(\"Enter a number\").required(\"Enter a number\").typeError(\"Enter a number\"),\r\n    unpaidLeaves : yup.number().positive(\"Enter a +ve number\").integer(\"Enter a number\").required(\"Enter a number\").typeError(\"Enter a number\")\r\n  });\r\n\r\nfunction EmployeeCreate(props) {\r\n\r\n    const { register, handleSubmit, errors } = useForm({resolver:yupResolver( EmpSchema )});\r\n\r\n    const [loading,setLoading] = useState(false);\r\n   // const [branches,setBranches] = useState([]);\r\n    const [depts,setDepts] = useState([]);\r\n    const [branchId,setBranchId] = useState('');\r\n  \r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/branch/depts',{\r\n            token:localStorage.getItem('token'),\r\n            id:props.match.params.id\r\n        }).then(res=>{\r\n            setDepts(res.data.result);\r\n            setBranchId(res.data.branchId);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            setLoading(false);\r\n          })\r\n          // eslint-disable-next-line\r\n    },[])\r\n\r\n    const onSubmit=(data)=>{\r\n        var { empId , deptCode ,role ,firstName,lastName,email,password,gender,DOB,country,city,address,phone,casualLeaves,sickLeaves,unpaidLeaves} = data;\r\n        axios.post('http://localhost:5000/branch/empCreate',{\r\n            token:localStorage.getItem('token'),\r\n            id:props.match.params.id,\r\n            empId,\r\n            deptCode,role,firstName,lastName,\r\n            email,password,gender,DOB,country,city,\r\n            address,phone,casualLeaves,sickLeaves,unpaidLeaves\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n            {}   //setError(true);\r\n            else if(!!props.match.params.id===false)\r\n                props.history.push(`/SubadminDashboard/emp/${empId}`);\r\n            else if(!!props.match.params.id===true)\r\n                props.history.push(`/AdminDashboard/branch/${props.match.params.id}/emp/${empId}`);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    if(loading)\r\n        return <div>Loading...</div>\r\n    \r\n\r\n    return (\r\n        <div id=\"formbox\"> \r\n        <h3>Add Employee</h3> \r\n        <h5>Branch Id :  {branchId}</h5>\r\n            <form class=\"emp\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div id=\"forminp\">\r\n                        <label>Employee ID</label>\r\n                        <input type=\"text\" name=\"empId\" placeholder=\"Can't be changed later\" ref={register} />\r\n                        {errors.empId && <p>{errors.empId.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label >Choose a dept:</label>\r\n                        <select  name=\"deptCode\" ref={register} >\r\n                          <option hidden disabled selected value> -- select an option -- </option>\r\n                          { depts.map((dept)=><option value={dept.code} id={dept.code}>{dept.name}</option>) }\r\n                        </select>\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Gender</label>\r\n                        <select  required name=\"gender\" ref={register}>\r\n                            <option hidden disabled selected value> -- select gender -- </option>\r\n                            <option value=\"MALE\" id=\"MALE\">Male</option>\r\n                            <option value=\"FEMALE\" id=\"FEMALE\">Female</option>\r\n                            <option value=\"OTHER\" id=\"OTHER\">Other</option>\r\n                        </select>\r\n                        {errors.gender && <p>{errors.gender.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Date of birth</label>\r\n                        <input  required type=\"date\" name=\"DOB\" ref={register} />\r\n                        {errors.DOB && <p>{errors.DOB.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Role</label>\r\n                        <input type=\"text\" name=\"role\" ref={register} />\r\n                        {errors.role && <p>{errors.role.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" name=\"firstName\" ref={register} />\r\n                        {errors.firstName && <p>{errors.firstName.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" name=\"lastName\" ref={register} />\r\n                        {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                    </div> \r\n                    <div id=\"forminp\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" ref={register} />\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Password</label>\r\n                        <input type=\"text\" name=\"password\" ref={register} />\r\n                        {errors.password && <p>{errors.password.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Phone number</label>\r\n                        <input type=\"text\" name=\"phone\" ref={register} />\r\n                        {errors.phone && <p>{errors.phone.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Country</label>\r\n                        <input type=\"text\" name=\"country\" ref={register} />\r\n                        {errors.country && <p>{errors.country.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>City</label>\r\n                        <input type=\"text\" name=\"city\" ref={register} />\r\n                        {errors.country && <p>{errors.city.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Address</label>\r\n                        <input type=\"text\" name=\"address\" ref={register} />\r\n                        {errors.address && <p>{errors.address.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Casual Leaves remaining</label>\r\n                        <input type=\"number\" name=\"casualLeaves\" ref={register} />\r\n                        {errors.casualLeaves && <p>{errors.casualLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Sick leaves remaining</label>\r\n                        <input type=\"number\" name=\"sickLeaves\" ref={register} />\r\n                        {errors.sickLeaves && <p>{errors.sickLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\" class=\"unpaid\">\r\n                        <label>Unpaid leaves remaining</label>\r\n                        <input type=\"number\" name=\"unpaidLeaves\" ref={register} />\r\n                        {errors.unpaidLeaves && <p>{errors.unpaidLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <input id=\"submitbutton\" type=\"submit\" />\r\n                    </div>\r\n            </form>\r\n    </div>\r\n    )\r\n\r\n}\r\n \r\nexport default EmployeeCreate;","D:\\ELMS\\client\\src\\components\\AddEmployee.js",["218","219","220","221","222","223","224","225"],"D:\\ELMS\\client\\src\\components\\UpdateEmployee.js",["226"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport \"../styles/form.css\"\r\n\r\nconst EmpSchema = yup.object().shape({\r\n    deptCode : yup.string().required(),\r\n    firstName : yup.string().required(),\r\n    lastName : yup.string(),\r\n    email : yup.string().email().required(),\r\n    password :yup.string().min(5).required(),\r\n    gender : yup.mixed().oneOf([\"MALE\",\"FEMALE\",\"OTHER\"]),\r\n    phone : yup.number().required(),\r\n    casualLeaves : yup.number().positive().integer().required(),\r\n    sickLeaves :  yup.number().positive().integer().required(),\r\n    unpaidLeaves : yup.number().integer().required()\r\n  });\r\n\r\nfunction EmployeeUpdate(props) {\r\n\r\n    const { register, handleSubmit,reset, errors } = useForm({resolver:yupResolver( EmpSchema )});\r\n    var emp_id = props.match.params.id;\r\n    const [depts,setDepts] = useState([]);\r\n    const [branchId,setBranchId] = useState('');\r\n    const [deleted,setDeleted] = useState(false);\r\n    const [curdept,setCurDept] = useState('');\r\n    const [branches,setBranches] = useState([]);\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n        console.log(res.data.result)\r\n            setBranches(res.data.result);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        axios.post('http://localhost:5000/admin/dept',{\r\n            token:localStorage.getItem('token'),\r\n            id:branchId\r\n        }).then(res=>{\r\n            setDepts(res.data.result);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n          })\r\n          // eslint-disable-next-line\r\n    },[branchId])\r\n\r\n    useEffect(()=>{\r\n        axios.post('http://localhost:5000/branch/emp',{\r\n          token:localStorage.getItem('token'),\r\n          empId:emp_id\r\n        }).then(res=>{\r\n            var data=res.data.result[0];\r\n            setCurDept(data.dept_code);\r\n            if(data){\r\n                var date= data.dob;\r\n                date=moment(date).format('YYYY-MM-DD');\r\n                reset({\r\n                    id : data.branch_id,\r\n                    deptCode : data.dept_code,\r\n                    role : data.role,\r\n                    firstName : data.first_name,\r\n                    lastName : data.last_name,\r\n                    email : data.email,\r\n                    password : data.password,\r\n                    gender : data.gender,\r\n                    DOB : date,\r\n                    country : data.country,\r\n                    city : data.city,\r\n                    address : data.address,\r\n                    phone : data.phone_number,\r\n                    casualLeaves : data.casual_leaves,\r\n                    sickLeaves : data.sick_leaves,\r\n                    unpaidLeaves : data.unpaid_leaves\r\n                })\r\n                setBranchId(data.branch_id)\r\n            }\r\n            }).catch(err=>{\r\n              console.log(err);\r\n            })\r\n            // eslint-disable-next-line\r\n      },[])\r\n\r\n\r\n    const onSubmit=data=>{\r\n        var { id,deptCode ,role ,firstName,lastName,email,password,gender,DOB,country,city,address,phone,casualLeaves,sickLeaves,unpaidLeaves} = data;\r\n        axios.post('http://localhost:5000/branch/empUpdate',{\r\n            token:localStorage.getItem('token'),\r\n            id,\r\n            empId:emp_id,\r\n            deptCode,role,firstName,lastName,\r\n            email,password,gender,DOB,country,city,\r\n            address,phone,casualLeaves,sickLeaves,unpaidLeaves\r\n        }).then(res=>{\r\n            var data=res.data.result[0];\r\n            if(data)\r\n            {\r\n                var date= data.dob;\r\n                date=moment(date).format('YYYY-MM-DD');\r\n                reset({\r\n                    id :data.branch_id,\r\n                    deptCode : data.dept_code,\r\n                    role : data.role,\r\n                    firstName : data.first_name,\r\n                    lastName : data.last_name,\r\n                    email : data.email,\r\n                    password : data.password,\r\n                    gender : data.gender,\r\n                    DOB : date,\r\n                    country : data.country,\r\n                    city : data.city,\r\n                    address : data.address,\r\n                    phone : data.phone_number,\r\n                    casualLeaves : data.casual_leaves,\r\n                    sickLeaves : data.sick_leaves,\r\n                    unpaidLeaves : data.unpaid_leaves\r\n                })\r\n                setBranchId(data.branch_id)\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleDelete=()=>{\r\n        axios.post('http://localhost:5000/branch/empDelete',{\r\n            token:localStorage.getItem('token'),\r\n            empId:emp_id\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n               {}\r\n            else\r\n                setDeleted(true);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    if(deleted)\r\n        return <div>\r\n            <h1>Employee is Deleted  :~(</h1>\r\n        </div>\r\n\r\n    return (\r\n        <div id=\"formbox\"> \r\n        <h3>Update Employee Details</h3> \r\n        <h5>Employee Id :  {emp_id}</h5>\r\n            <form class=\"emp\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div id=\"forminp\">\r\n                            <label>Branch</label>\r\n                            <select name=\"id\" onChange={e=>setBranchId(e.target.value)} ref={register} >   \r\n                               { branches&&branches.map(b=><option id={b.branch_id} value={b.branch_id}>{b.name}</option>) }\r\n                            </select>\r\n                            {errors.id && <p>{errors.id.message}</p>}  \r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label >Choose a dept:</label>\r\n                        <select  name=\"deptCode\" ref={register}>\r\n                          { depts.map((dept)=><option value={dept.code} id={dept.code}>{dept.name}</option>) }\r\n                        </select>\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Gender</label>\r\n                        <select  required name=\"gender\" ref={register}>\r\n                            <option hidden disabled selected value> -- select gender -- </option>\r\n                            <option value=\"MALE\" id=\"MALE\">Male</option>\r\n                            <option value=\"FEMALE\" id=\"FEMALE\">Female</option>\r\n                            <option value=\"OTHER\" id=\"OTHER\">Other</option>\r\n                        </select>\r\n                        {errors.gender && <p>{errors.gender.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Date of birth</label>\r\n                        <input  required type=\"date\" name=\"DOB\" ref={register} />\r\n                        {errors.DOB && <p>{errors.DOB.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Role</label>\r\n                        <input type=\"text\" name=\"role\" ref={register} />\r\n                        {errors.role && <p>{errors.role.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" name=\"firstName\" ref={register} />\r\n                        {errors.firstName && <p>{errors.firstName.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" name=\"lastName\" ref={register} />\r\n                        {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                    </div> \r\n                    <div id=\"forminp\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" ref={register} />\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Password</label>\r\n                        <input type=\"text\" name=\"password\" ref={register} />\r\n                        {errors.password && <p>{errors.password.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Phone number</label>\r\n                        <input type=\"text\" name=\"phone\" ref={register} />\r\n                        {errors.phone && <p>{errors.phone.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Country</label>\r\n                        <input type=\"text\" name=\"country\" ref={register} />\r\n                        {errors.country && <p>{errors.country.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>City</label>\r\n                        <input type=\"text\" name=\"city\" ref={register} />\r\n                        {errors.country && <p>{errors.city.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Address</label>\r\n                        <input type=\"text\" name=\"address\" ref={register} />\r\n                        {errors.address && <p>{errors.address.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Casual Leaves remaining</label>\r\n                        <input type=\"number\" name=\"casualLeaves\" ref={register} />\r\n                        {errors.casualLeaves && <p>{errors.casualLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Sick leaves remaining</label>\r\n                        <input type=\"number\" name=\"sickLeaves\" ref={register} />\r\n                        {errors.sickLeaves && <p>{errors.sickLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                        <label>Unpaid leaves remaining</label>\r\n                        <input type=\"number\" name=\"unpaidLeaves\" ref={register} />\r\n                        {errors.unpaidLeaves && <p>{errors.unpaidLeaves.message}</p>}\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                    <input id=\"submitbutton\" type=\"submit\" />\r\n                    </div>\r\n                    <div id=\"forminp\">\r\n                    <button id=\"submitbutton\" onClick={handleDelete}>Delete</button>\r\n                    </div>\r\n               \r\n            </form>\r\n    </div>\r\n    )\r\n}\r\n \r\nexport default EmployeeUpdate;","D:\\ELMS\\client\\src\\components\\RequestsBranch.js",[],"D:\\ELMS\\client\\src\\components\\OldRequestsBranch.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeRequests.js",[],"D:\\ELMS\\client\\src\\components\\EmployeesBranch.js",[],"D:\\ELMS\\client\\src\\components\\DepartmentsBranch.js",[],"D:\\ELMS\\client\\src\\components\\Branches.js",["227","228","229","230","231"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport BranchContainer from './BranchContainer';\r\nimport ChartDoughnut from './ChartDoughnut';\r\nimport \"../styles/table.css\"\r\n\r\nfunction Branches() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [branchList,setBranchList] = useState([]);\r\n  const [error,setError] = useState(false);\r\n  const [searchTerm,setSearchTerm] = useState(\"\");\r\n  const [data,setData] = useState({});\r\n  var labels=[]\r\n  var dataOfEmp=[]\r\n  var colors=[]\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/branches',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            setBranchList(res.data.result);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/PopulationBranches',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            res.data.result.map(branch=>{\r\n              labels.push(branch.name);\r\n              dataOfEmp.push(branch.emps);\r\n              colors.push(getRandomRgb());\r\n            })\r\n            setData({\r\n              dataOfEmp,\r\n              labels,\r\n              colors\r\n            })\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  function getRandomRgb() {\r\n    var num = Math.round(0xffffff * Math.random());\r\n    var r = num >> 16;\r\n    var g = num >> 8 & 255;\r\n    var b = num & 255;\r\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\r\n  }\r\n\r\n\r\n\r\n\r\n  const dynamicSearch = () => {\r\n    if(searchTerm===\"\")\r\n      return branchList;\r\n    return branchList.filter(branch =>(branch.name).toLowerCase().includes(searchTerm.toLowerCase()))\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div>\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n      <div id=\"bb\">\r\n      <div class=\"searchbar\">\r\n        <input type=\"text\" value={searchTerm} onChange={(e)=>setSearchTerm(e.target.value)} placeholder=\"Search for branch\"/>\r\n      </div>\r\n      <div class =\"branch-table\">\r\n      <table>\r\n          <tbody>\r\n            <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Location</th>\r\n            <th>Update</th>\r\n            <th>Delete</th>\r\n            </tr>\r\n            <BranchContainer branchList={dynamicSearch() } />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      </div>\r\n      {/*<div>\r\n        <ChartDoughnut data={data}/>\r\n      </div>*/}\r\n    </div>\r\n  );\r\n  \r\n}\r\n \r\nexport default Branches;","D:\\ELMS\\client\\src\\components\\UpdateHolidays.js",[],"D:\\ELMS\\client\\src\\components\\Departments.js",["232"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DepartmentContainer from './DepartmentContainer';\r\nimport \"../styles/table.css\"\r\n\r\nfunction Departments() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [deptList,setDeptList] = useState([]);;\r\n  const [error,setError] = useState(false);\r\n  const [searchBranch,setSearchBranch] = useState(\"ALL\");\r\n\r\n  const [branches,setBranches] = useState([]);\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n        setBranches(res.data.result);\r\n        setLoading(false);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n      // eslint-disable-next-line\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/depts',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n        console.log(res.data.result)\r\n            setDeptList(res.data.result);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          console.log(err);\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  const dynamicSearch = () => {\r\n      console.log(deptList)\r\n    if(searchBranch===\"ALL\")\r\n      return deptList;\r\n    return deptList.filter(dept =>dept.branch_id==searchBranch)\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div id=\"bb\">\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n      <div class=\"dropdown-table searchbar\">\r\n            <select onChange={(e)=>setSearchBranch(e.target.value)} >\r\n              <option selected value=\"ALL\" id=\"ALL\">All Branches</option>\r\n              { branches.map((branch)=><option value={branch.branch_id} id={branch.branch_id}>{branch.name}</option>) }\r\n            </select>\r\n      </div>\r\n      <div class= \"branch-table\">\r\n        <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>Branch ID</th>\r\n            <th>Code</th>\r\n            <th>Name</th> \r\n            <th>Update</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n            <DepartmentContainer deptList={dynamicSearch() } />\r\n        </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n      \r\n  );\r\n  \r\n}\r\n \r\nexport default Departments;","D:\\ELMS\\client\\src\\components\\Employees.js",["233"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport EmployeeContainer2 from './EmployeeContainer2';\r\nimport \"../styles/table.css\"\r\n\r\nfunction Employees() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [empList,setEmpList] = useState([]);\r\n  const [error,setError] = useState(false);\r\n  const [searchBranch,setSearchBranch] = useState(\"ALL\");\r\n  const [searchTerm,setSearchTerm] = useState(\"\");\r\n  const [branches,setBranches] = useState([]);\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n      console.log(res.data.result)\r\n        setBranches(res.data.result);\r\n        setLoading(false);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n      // eslint-disable-next-line\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/emps',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            console.log(res.data.result)\r\n            setEmpList(res.data.result);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  const dynamicSearch = () => {\r\n    var emps;\r\n    if(searchBranch===\"ALL\")\r\n        emps = empList;\r\n    else\r\n        emps = empList.filter(emp => emp.branch_id==searchBranch)\r\n    if(searchTerm===\"\")\r\n      return emps;\r\n    console.log(emps)\r\n    return emps.filter(emp =>(emp.first_name+emp.last_name).toLowerCase().includes(searchTerm.toLowerCase()))\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div id=\"bb\">\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n     <div class=\"employees-list-top\">\r\n     <div class=\"dropdown-table searchbar\">\r\n            <select onChange={(e)=>setSearchBranch(e.target.value)} >\r\n              <option selected value=\"ALL\" id=\"ALL\">All Branches</option>\r\n              { branches.map((branch)=><option value={branch.branch_id} id={branch.branch_id}>{branch.name}</option>) }\r\n            </select>\r\n      </div>\r\n      <div class=\"searchbar\">\r\n        <input  type=\"text\" value={searchTerm} onChange={(e)=>setSearchTerm(e.target.value)} placeholder=\"Search for an employee name\"/>\r\n      </div>\r\n     </div>\r\n     <div class =\"emp-table table-responsive\">\r\n        <table class=\"table\">\r\n        <tbody>\r\n          <tr>\r\n          <th>BranchId</th>\r\n          <th>EmpID</th>\r\n          <th>Dept Code</th>\r\n          <th>Role</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Phone Number</th>\r\n          <th>Updates</th>\r\n          <th>Requests</th>           \r\n          </tr>\r\n          </tbody>\r\n          <EmployeeContainer2 emps={dynamicSearch() } />\r\n          </table>\r\n        </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n \r\nexport default Employees;","D:\\ELMS\\client\\src\\components\\OldRequests.js",[],"D:\\ELMS\\client\\src\\components\\Requests.js",["234"],"D:\\ELMS\\client\\src\\components\\RequestHistory.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeProfile.js",[],"D:\\ELMS\\client\\src\\components\\ApplyLeave.js",["235"],"D:\\ELMS\\client\\src\\components\\DepartmentContainer.js",[],"D:\\ELMS\\client\\src\\components\\ChartDoughnut.js",[],"D:\\ELMS\\client\\src\\components\\BranchContainer.js",[],"D:\\ELMS\\client\\src\\components\\Department.js",["236"],"import React, {  useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Department(props) {\r\n    const [dept,setDept] = useState(props.dept);\r\n    const [del,setDel]= useState(false);\r\n    const [update,setUpdate] = useState(false);\r\n    const [deptName,setDeptName] = useState(dept.name);\r\n    const [deptShortName,setDeptShortName]= useState(dept.short_name);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const handleUpdateDept = (props) => {\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/branch/dept',{\r\n            token:localStorage.getItem('token'),\r\n            code:dept.code,\r\n            name:deptName,\r\n            shortName:deptShortName\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n                {}\r\n            else\r\n                setDept(res.data.result[0]);\r\n            setLoading(false);setUpdate(false);\r\n        }).catch(err=>{\r\n              console.log(err);\r\n              setLoading(false);setUpdate(false);\r\n        })\r\n    }\r\n\r\n    const handleDeleteDept = () => {\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/branch/deldept',{\r\n            token:localStorage.getItem('token'),\r\n            code:dept.code\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n                {\r\n                    alert(\"Department can't be deleted when employees are assigned\")\r\n                }\r\n            else\r\n                setDel(true);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n              console.log(err);\r\n              setLoading(false);\r\n        })\r\n    }\r\n    if(del) return <div></div>\r\n    if(loading)\r\n      return <div>Loading</div>\r\n    else\r\n    if(update)\r\n        return (\r\n            <tr>\r\n                <td>{dept.code}</td>\r\n                <td class=\"table-form\"><input type=\"text\" value={deptName} onChange={e=>setDeptName(e.target.value)} /></td>\r\n                <td class=\"table-form\"><input type=\"text\" value={deptShortName} onChange={e=>setDeptShortName(e.target.value)} /> </td>\r\n                <td><input class=\"table-button\" value=\"Update\" onClick={handleUpdateDept} /></td>\r\n                <td><div class=\"table-button\" disabled={true} onClick={handleDeleteDept}>delete</div></td>\r\n            </tr>\r\n        )\r\n    else\r\n        return (\r\n            <tr>\r\n                <td>{dept.code}</td>\r\n                <td>{dept.name}</td>\r\n                <td>{dept.short_name} </td>\r\n                <td class=\"td-update\"><div class=\"table-button\" onClick={()=>setUpdate(true)}>update</div></td>\r\n                <td><div class=\"table-button\" onClick={handleDeleteDept}>delete</div></td>\r\n            </tr>\r\n        )\r\n}\r\n\r\nexport default Department;","D:\\ELMS\\client\\src\\components\\Request.js",["237"],"D:\\ELMS\\client\\src\\components\\EmployeeContainer.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeContainer2.js",[],"D:\\ELMS\\client\\src\\components\\RequestContainer.js",[],"D:\\ELMS\\client\\src\\components\\Calendar.js",[],"D:\\ELMS\\client\\src\\components\\Branch.js",[],"D:\\ELMS\\client\\src\\components\\EmployeeRow.js",[],"D:\\ELMS\\client\\src\\components\\Request2.js",["238"],"D:\\ELMS\\client\\src\\components\\Employee.js",[],"D:\\ELMS\\client\\src\\components\\SubadminToday.js",[],"D:\\ELMS\\client\\src\\components\\AdminToday.js",["239"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TodayContainer from './TodayContainer';\r\nimport \"../styles/oldReq.css\"\r\nimport \"../styles/table.css\"\r\nimport \"../styles/NewRequest.css\"\r\n\r\nfunction Requests() {\r\n  const [loading,setLoading] = useState(true);\r\n  const [reqList,setReqList] = useState([]);\r\n  const [error,setError] = useState(false);\r\n  const [searchBranch,setSearchBranch] = useState(\"ALL\");\r\n\r\n  const [branches,setBranches] = useState([]);\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    axios.get('http://localhost:5000/admin/fetchBranches').then(res=>{\r\n        setBranches(res.data.result);\r\n        setLoading(false);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n      // eslint-disable-next-line\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/admin/reqsToday',{\r\n        token:localStorage.getItem('token')\r\n    }).then(res=>{\r\n            setReqList(res.data.result);\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n          setError(true);\r\n          setLoading(false);\r\n        })\r\n        // eslint-disable-next-line\r\n  },[])\r\n\r\n  const dynamicSearch = () => {\r\n    if(searchBranch===\"ALL\")\r\n      return reqList;\r\n    return reqList.filter(req =>req.branch_id==searchBranch)\r\n  }\r\n\r\n\r\n  if(loading)\r\n  {\r\n    return(<div>Loading</div>)\r\n  }\r\n  else\r\n  return (\r\n    <div>\r\n      <div>\r\n        {error&&<p>Error Occured</p>}\r\n      </div>\r\n      <div id=\"bb\">\r\n        <div class=\"dropdown-table searchbar\">\r\n              <select onChange={(e)=>setSearchBranch(e.target.value)} >\r\n                <option selected value=\"ALL\" id=\"ALL\">All branches</option>\r\n                { branches.map((branch)=><option value={branch.branch_id} id={branch.branch_id}>{branch.name}</option>) }\r\n              </select>\r\n        </div>\r\n\r\n        <TodayContainer reqList={dynamicSearch()} branchId={searchBranch} />\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n \r\nexport default Requests;","D:\\ELMS\\client\\src\\components\\TodayContainer.js",[],{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":86,"column":13,"nodeType":"246","endLine":86,"endColumn":56},{"ruleId":"244","severity":1,"message":"245","line":106,"column":15,"nodeType":"246","endLine":106,"endColumn":58},{"ruleId":"247","severity":1,"message":"248","line":84,"column":15,"nodeType":"249","messageId":"250","endLine":84,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":95,"column":11,"nodeType":"249","messageId":"250","endLine":95,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":1,"column":25,"nodeType":"253","messageId":"254","endLine":1,"endColumn":34},{"ruleId":"244","severity":1,"message":"255","line":57,"column":11,"nodeType":"246","endLine":57,"endColumn":78},{"ruleId":"256","severity":1,"message":"257","line":57,"column":35,"nodeType":"258","messageId":"259","endLine":57,"endColumn":55},{"ruleId":"244","severity":1,"message":"245","line":76,"column":21,"nodeType":"246","endLine":76,"endColumn":47},{"ruleId":"251","severity":1,"message":"252","line":1,"column":26,"nodeType":"253","messageId":"254","endLine":1,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":10,"column":5,"nodeType":"262","messageId":"250","endLine":10,"endColumn":9},{"ruleId":"260","severity":1,"message":"263","line":12,"column":5,"nodeType":"262","messageId":"250","endLine":12,"endColumn":7},{"ruleId":"260","severity":1,"message":"261","line":13,"column":5,"nodeType":"262","messageId":"250","endLine":13,"endColumn":9},{"ruleId":"260","severity":1,"message":"263","line":11,"column":5,"nodeType":"262","messageId":"250","endLine":11,"endColumn":7},{"ruleId":"260","severity":1,"message":"264","line":12,"column":5,"nodeType":"262","messageId":"250","endLine":12,"endColumn":10},{"ruleId":"260","severity":1,"message":"265","line":13,"column":5,"nodeType":"262","messageId":"250","endLine":13,"endColumn":13},{"ruleId":"260","severity":1,"message":"266","line":14,"column":5,"nodeType":"262","messageId":"250","endLine":14,"endColumn":14},{"ruleId":"260","severity":1,"message":"267","line":23,"column":5,"nodeType":"262","messageId":"250","endLine":23,"endColumn":10},{"ruleId":"260","severity":1,"message":"268","line":24,"column":5,"nodeType":"262","messageId":"250","endLine":24,"endColumn":13},{"ruleId":"260","severity":1,"message":"269","line":25,"column":5,"nodeType":"262","messageId":"250","endLine":25,"endColumn":11},{"ruleId":"260","severity":1,"message":"270","line":26,"column":5,"nodeType":"262","messageId":"250","endLine":26,"endColumn":10},{"ruleId":"260","severity":1,"message":"271","line":27,"column":5,"nodeType":"262","messageId":"250","endLine":27,"endColumn":17},{"ruleId":"260","severity":1,"message":"272","line":28,"column":5,"nodeType":"262","messageId":"250","endLine":28,"endColumn":15},{"ruleId":"260","severity":1,"message":"273","line":29,"column":5,"nodeType":"262","messageId":"250","endLine":29,"endColumn":17},{"ruleId":"260","severity":1,"message":"264","line":12,"column":5,"nodeType":"262","messageId":"250","endLine":12,"endColumn":10},{"ruleId":"260","severity":1,"message":"265","line":13,"column":5,"nodeType":"262","messageId":"250","endLine":13,"endColumn":13},{"ruleId":"260","severity":1,"message":"266","line":14,"column":5,"nodeType":"262","messageId":"250","endLine":14,"endColumn":14},{"ruleId":"260","severity":1,"message":"269","line":23,"column":5,"nodeType":"262","messageId":"250","endLine":23,"endColumn":11},{"ruleId":"260","severity":1,"message":"270","line":24,"column":5,"nodeType":"262","messageId":"250","endLine":24,"endColumn":10},{"ruleId":"260","severity":1,"message":"271","line":25,"column":5,"nodeType":"262","messageId":"250","endLine":25,"endColumn":17},{"ruleId":"260","severity":1,"message":"272","line":26,"column":5,"nodeType":"262","messageId":"250","endLine":26,"endColumn":15},{"ruleId":"260","severity":1,"message":"273","line":27,"column":5,"nodeType":"262","messageId":"250","endLine":27,"endColumn":17},{"ruleId":"251","severity":1,"message":"274","line":30,"column":12,"nodeType":"253","messageId":"254","endLine":30,"endColumn":19},{"ruleId":"251","severity":1,"message":"275","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":21},{"ruleId":"251","severity":1,"message":"276","line":12,"column":10,"nodeType":"253","messageId":"254","endLine":12,"endColumn":14},{"ruleId":"277","severity":1,"message":"278","line":35,"column":39,"nodeType":"279","messageId":"280","endLine":35,"endColumn":41},{"ruleId":"281","severity":1,"message":"282","line":57,"column":17,"nodeType":"249","messageId":"283","endLine":57,"endColumn":19},{"ruleId":"281","severity":1,"message":"282","line":57,"column":22,"nodeType":"249","messageId":"283","endLine":57,"endColumn":23},{"ruleId":"247","severity":1,"message":"248","line":44,"column":49,"nodeType":"249","messageId":"250","endLine":44,"endColumn":51},{"ruleId":"247","severity":1,"message":"248","line":46,"column":51,"nodeType":"249","messageId":"250","endLine":46,"endColumn":53},{"ruleId":"247","severity":1,"message":"248","line":43,"column":46,"nodeType":"249","messageId":"250","endLine":43,"endColumn":48},{"ruleId":"251","severity":1,"message":"284","line":19,"column":35,"nodeType":"253","messageId":"254","endLine":19,"endColumn":41},{"ruleId":"251","severity":1,"message":"252","line":1,"column":18,"nodeType":"253","messageId":"254","endLine":1,"endColumn":27},{"ruleId":"251","severity":1,"message":"285","line":13,"column":11,"nodeType":"253","messageId":"254","endLine":13,"endColumn":19},{"ruleId":"251","severity":1,"message":"286","line":21,"column":17,"nodeType":"253","messageId":"254","endLine":21,"endColumn":21},{"ruleId":"247","severity":1,"message":"248","line":43,"column":46,"nodeType":"249","messageId":"250","endLine":43,"endColumn":48},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-dupe-keys","Duplicate key 'code'.","ObjectExpression","Duplicate key 'id'.","Duplicate key 'empId'.","Duplicate key 'deptCode'.","Duplicate key 'firstName'.","Duplicate key 'email'.","Duplicate key 'password'.","Duplicate key 'gender'.","Duplicate key 'phone'.","Duplicate key 'casualLeaves'.","Duplicate key 'sickLeaves'.","Duplicate key 'unpaidLeaves'.","'curdept' is assigned a value but never used.","'ChartDoughnut' is defined but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-mixed-operators","Unexpected mix of '>>' and '&'.","unexpectedMixedOperator","'errors' is assigned a value but never used.","'branchId' is assigned a value but never used.","'days' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]